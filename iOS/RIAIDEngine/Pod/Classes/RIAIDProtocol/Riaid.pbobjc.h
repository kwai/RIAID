// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: riaid.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class RIAIDADActionModel;
@class RIAIDADAnimationModel;
@class RIAIDADAppInstalledFunctionModel;
@class RIAIDADBeepActionModel;
@class RIAIDADBezierTransitionModel;
@class RIAIDADBrowserLifeCycleModel;
@class RIAIDADCancelDeviceMotionActionModel;
@class RIAIDADCancelTimerActionModel;
@class RIAIDADClickableActionModel;
@class RIAIDADConditionChangeActionModel;
@class RIAIDADConditionLogicModel;
@class RIAIDADConditionModel;
@class RIAIDADConditionTriggerModel;
@class RIAIDADConversionActionModel;
@class RIAIDADCustomActionModel;
@class RIAIDADDeviceMotionTriggerModel;
@class RIAIDADDynamicTrackActionModel;
@class RIAIDADExecuteFunctionActionModel;
@class RIAIDADFunctionModel;
@class RIAIDADGeneralTriggerModel;
@class RIAIDADHeartBeatTriggerModel;
@class RIAIDADInSceneAnimationTransitionModel;
@class RIAIDADLogicUnitModel;
@class RIAIDADLottieActionModel;
@class RIAIDADLottieTransitionModel;
@class RIAIDADReadAttributeFunctionModel;
@class RIAIDADRenderContentTransitionModel;
@class RIAIDADRenderWrapModel;
@class RIAIDADSceneLifeCycleModel;
@class RIAIDADSceneModel;
@class RIAIDADSceneRelationModel;
@class RIAIDADSceneShareTransitionModel;
@class RIAIDADStepActionModel;
@class RIAIDADTemplateTransitionModel;
@class RIAIDADTimeoutTriggerModel;
@class RIAIDADToastActionModel;
@class RIAIDADTrackActionModel;
@class RIAIDADTransitionActionModel;
@class RIAIDADTransitionModel;
@class RIAIDADTranslationTransitionModel;
@class RIAIDADTriggerActionModel;
@class RIAIDADTriggerModel;
@class RIAIDADUrlActionModel;
@class RIAIDADVariableChangeActionModel;
@class RIAIDADVibratorActionModel;
@class RIAIDADVideoActionModel;
@class RIAIDADVideoDurationTimeoutTriggerModel;
@class RIAIDADVisibilityTransitionModel;
@class RIAIDAnchorGroupAttributes;
@class RIAIDAnchorGroupAttributes_AnchorItemAttributes;
@class RIAIDAttributes;
@class RIAIDBasicVariable;
@class RIAIDBasicVariableValue_Value;
@class RIAIDBoolValue;
@class RIAIDButtonAttributes;
@class RIAIDButtonAttributes_HighlightState;
@class RIAIDCommonAttributes;
@class RIAIDCornerRadius;
@class RIAIDDeviceAxisConditionModel;
@class RIAIDDeviceAxisUnitModel;
@class RIAIDFloatValue;
@class RIAIDGestureModel;
@class RIAIDGradient;
@class RIAIDHandler;
@class RIAIDImageAttributes;
@class RIAIDInt32Value;
@class RIAIDLayout;
@class RIAIDLayout_Edge;
@class RIAIDLottieAttributes;
@class RIAIDLottieAttributes_ReplaceImage;
@class RIAIDLottieAttributes_ReplaceKeyPathColor;
@class RIAIDLottieAttributes_ReplaceText;
@class RIAIDLottieHandler;
@class RIAIDNode;
@class RIAIDPoint;
@class RIAIDResponder;
@class RIAIDScrollAttributes;
@class RIAIDShadow;
@class RIAIDStroke;
@class RIAIDSwipeGesture;
@class RIAIDTextAttributes;
@class RIAIDTextAttributes_Align;
@class RIAIDTextAttributes_RichText;
@class RIAIDVideoAttributes;
@class RIAIDVideoHandler;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum RIAIDCompareOperator

/** 比较运算符 */
typedef GPB_ENUM(RIAIDCompareOperator) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDCompareOperator_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 不识别 */
  RIAIDCompareOperator_CompareOperatorUnknown = 0,

  /** 相等 */
  RIAIDCompareOperator_CompareOperatorEqual = 1,

  /** 不相等 */
  RIAIDCompareOperator_CompareOperatorNotEqual = 2,

  /** 小于 */
  RIAIDCompareOperator_CompareOperatorLessThan = 3,

  /** 大于 */
  RIAIDCompareOperator_CompareOperatorGreaterThan = 4,

  /** 小于等于 */
  RIAIDCompareOperator_CompareOperatorLessThanOrEqual = 5,

  /** 大于等于 */
  RIAIDCompareOperator_CompareOperatorGreaterThanOrEqual = 6,
};

GPBEnumDescriptor *RIAIDCompareOperator_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDCompareOperator_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDLogicOperator

/** 逻辑运算符-与、或、非 */
typedef GPB_ENUM(RIAIDLogicOperator) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDLogicOperator_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 不识别 */
  RIAIDLogicOperator_LogicOperatorUnknown = 0,

  /** 或 */
  RIAIDLogicOperator_LogicOperatorOr = 1,

  /** 与 */
  RIAIDLogicOperator_LogicOperatorAnd = 2,

  /** 非 */
  RIAIDLogicOperator_LogicOperatorNot = 3,
};

GPBEnumDescriptor *RIAIDLogicOperator_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDLogicOperator_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDDeviceAxisType

/** 轴类型 */
typedef GPB_ENUM(RIAIDDeviceAxisType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDDeviceAxisType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 未知 */
  RIAIDDeviceAxisType_DeviceAxisTypeUnknown = 0,

  /** X轴 */
  RIAIDDeviceAxisType_DeviceAxisTypeX = 1,

  /** Y轴 */
  RIAIDDeviceAxisType_DeviceAxisTypeY = 2,

  /** Z轴 */
  RIAIDDeviceAxisType_DeviceAxisTypeZ = 3,
};

GPBEnumDescriptor *RIAIDDeviceAxisType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDDeviceAxisType_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDBasicVariableValue_Type

/** 变量支持的类型，包括布尔，长整形，double和字符串 */
typedef GPB_ENUM(RIAIDBasicVariableValue_Type) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDBasicVariableValue_Type_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RIAIDBasicVariableValue_Type_None = 0,
  RIAIDBasicVariableValue_Type_Bool = 1,
  RIAIDBasicVariableValue_Type_Integer = 2,
  RIAIDBasicVariableValue_Type_Double = 3,
  RIAIDBasicVariableValue_Type_String = 4,
};

GPBEnumDescriptor *RIAIDBasicVariableValue_Type_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDBasicVariableValue_Type_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDGradient_GradientType

/** 渐变类型。目前我们仅支持三种渐变类型。 */
typedef GPB_ENUM(RIAIDGradient_GradientType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDGradient_GradientType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RIAIDGradient_GradientType_GradientTypeUnknown = 0,
  RIAIDGradient_GradientType_GradientTypeLinear = 1,
};

GPBEnumDescriptor *RIAIDGradient_GradientType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDGradient_GradientType_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDGradient_GradientAngle

typedef GPB_ENUM(RIAIDGradient_GradientAngle) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDGradient_GradientAngle_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RIAIDGradient_GradientAngle_AngleUnknown = 0,

  /** 0  左--> 右 */
  RIAIDGradient_GradientAngle_Angle0 = 1,

  /** 45 左下 --> 右上 */
  RIAIDGradient_GradientAngle_Angle45 = 2,

  /** 90 下 --> 上 */
  RIAIDGradient_GradientAngle_Angle90 = 3,

  /** 135 右下 --> 左上 */
  RIAIDGradient_GradientAngle_Angle135 = 4,

  /** 180 右 --> 左 */
  RIAIDGradient_GradientAngle_Angle180 = 5,

  /** 225 右上 --> 左下 */
  RIAIDGradient_GradientAngle_Angle225 = 6,

  /** 270 上 --> 下 */
  RIAIDGradient_GradientAngle_Angle270 = 7,

  /** 315 左上 --> 右下 */
  RIAIDGradient_GradientAngle_Angle315 = 8,
};

GPBEnumDescriptor *RIAIDGradient_GradientAngle_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDGradient_GradientAngle_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDTextAttributes_Ellipsize

typedef GPB_ENUM(RIAIDTextAttributes_Ellipsize) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDTextAttributes_Ellipsize_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RIAIDTextAttributes_Ellipsize_EllipsizeUnknown = 0,
  RIAIDTextAttributes_Ellipsize_EllipsizeStart = 1,
  RIAIDTextAttributes_Ellipsize_EllipsizeMiddle = 2,
  RIAIDTextAttributes_Ellipsize_EllipsizeEnd = 3,
};

GPBEnumDescriptor *RIAIDTextAttributes_Ellipsize_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDTextAttributes_Ellipsize_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDTextAttributes_LineMode

/** 下划线控制 */
typedef GPB_ENUM(RIAIDTextAttributes_LineMode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDTextAttributes_LineMode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RIAIDTextAttributes_LineMode_LineModeUnknown = 0,
  RIAIDTextAttributes_LineMode_LineModeNormal = 1,
  RIAIDTextAttributes_LineMode_LineModeUnderline = 2,
  RIAIDTextAttributes_LineMode_LineModeStrikeThru = 3,
};

GPBEnumDescriptor *RIAIDTextAttributes_LineMode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDTextAttributes_LineMode_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDTextAttributes_Align_Horizontal

typedef GPB_ENUM(RIAIDTextAttributes_Align_Horizontal) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDTextAttributes_Align_Horizontal_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RIAIDTextAttributes_Align_Horizontal_HorizontalUnknown = 0,
  RIAIDTextAttributes_Align_Horizontal_HorizontalStart = 1,
  RIAIDTextAttributes_Align_Horizontal_HorizontalCenter = 2,
  RIAIDTextAttributes_Align_Horizontal_HorizontalEnd = 3,
};

GPBEnumDescriptor *RIAIDTextAttributes_Align_Horizontal_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDTextAttributes_Align_Horizontal_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDTextAttributes_Align_Vertical

typedef GPB_ENUM(RIAIDTextAttributes_Align_Vertical) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDTextAttributes_Align_Vertical_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RIAIDTextAttributes_Align_Vertical_VerticalUnknown = 0,
  RIAIDTextAttributes_Align_Vertical_VerticalTop = 1,
  RIAIDTextAttributes_Align_Vertical_VerticalCenter = 2,
  RIAIDTextAttributes_Align_Vertical_VerticalBottom = 3,
};

GPBEnumDescriptor *RIAIDTextAttributes_Align_Vertical_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDTextAttributes_Align_Vertical_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDTextAttributes_RichText_RichAlign

typedef GPB_ENUM(RIAIDTextAttributes_RichText_RichAlign) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDTextAttributes_RichText_RichAlign_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RIAIDTextAttributes_RichText_RichAlign_RichAlignUnknown = 0,
  RIAIDTextAttributes_RichText_RichAlign_RichAlignCenter = 1,
  RIAIDTextAttributes_RichText_RichAlign_RichAlignBottom = 2,
};

GPBEnumDescriptor *RIAIDTextAttributes_RichText_RichAlign_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDTextAttributes_RichText_RichAlign_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDImageAttributes_ScaleType

typedef GPB_ENUM(RIAIDImageAttributes_ScaleType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDImageAttributes_ScaleType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RIAIDImageAttributes_ScaleType_ScaleTypeUnknown = 0,
  RIAIDImageAttributes_ScaleType_ScaleTypeFitXy = 1,
  RIAIDImageAttributes_ScaleType_ScaleTypeFitEnd = 2,
  RIAIDImageAttributes_ScaleType_ScaleTypeFitStart = 3,
  RIAIDImageAttributes_ScaleType_ScaleTypeFitCenter = 4,
  RIAIDImageAttributes_ScaleType_ScaleTypeCenter = 5,
  RIAIDImageAttributes_ScaleType_ScaleTypeCenterCrop = 6,
};

GPBEnumDescriptor *RIAIDImageAttributes_ScaleType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDImageAttributes_ScaleType_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDLottieAttributes_ScaleType

typedef GPB_ENUM(RIAIDLottieAttributes_ScaleType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDLottieAttributes_ScaleType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RIAIDLottieAttributes_ScaleType_ScaleTypeUnknown = 0,
  RIAIDLottieAttributes_ScaleType_ScaleTypeFitXy = 1,
  RIAIDLottieAttributes_ScaleType_ScaleTypeFitEnd = 2,
  RIAIDLottieAttributes_ScaleType_ScaleTypeFitStart = 3,
  RIAIDLottieAttributes_ScaleType_ScaleTypeFitCenter = 4,
  RIAIDLottieAttributes_ScaleType_ScaleTypeCenter = 5,
  RIAIDLottieAttributes_ScaleType_ScaleTypeCenterCrop = 6,
};

GPBEnumDescriptor *RIAIDLottieAttributes_ScaleType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDLottieAttributes_ScaleType_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDLottieAttributes_RepeatMode

typedef GPB_ENUM(RIAIDLottieAttributes_RepeatMode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDLottieAttributes_RepeatMode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RIAIDLottieAttributes_RepeatMode_RepeatModeUnknown = 0,

  /** 重新开始播放 */
  RIAIDLottieAttributes_RepeatMode_RepeatModeRestart = 1,

  /** 播放结束，倒退播放 */
  RIAIDLottieAttributes_RepeatMode_RepeatModeReverse = 2,
};

GPBEnumDescriptor *RIAIDLottieAttributes_RepeatMode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDLottieAttributes_RepeatMode_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDVideoAttributes_AdapterType

typedef GPB_ENUM(RIAIDVideoAttributes_AdapterType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDVideoAttributes_AdapterType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RIAIDVideoAttributes_AdapterType_AdapterTypeUnknown = 0,
  RIAIDVideoAttributes_AdapterType_AdapterTypeCenterCrop = 1,
  RIAIDVideoAttributes_AdapterType_AdapterTypeInspire = 2,
  RIAIDVideoAttributes_AdapterType_AdapterTypeAuto = 3,
};

GPBEnumDescriptor *RIAIDVideoAttributes_AdapterType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDVideoAttributes_AdapterType_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDAnchorGroupAttributes_AnchorItemAttributes_AnchorInfoVerticalAlign

typedef GPB_ENUM(RIAIDAnchorGroupAttributes_AnchorItemAttributes_AnchorInfoVerticalAlign) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDAnchorGroupAttributes_AnchorItemAttributes_AnchorInfoVerticalAlign_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 默认是居上 */
  RIAIDAnchorGroupAttributes_AnchorItemAttributes_AnchorInfoVerticalAlign_AnchorVerticalUnknown = 0,

  /** 锚点x与锚点信息顶部对齐，计算纵向的偏移量 */
  RIAIDAnchorGroupAttributes_AnchorItemAttributes_AnchorInfoVerticalAlign_AnchorVerticalTop = 1,

  /** 锚点中心与锚点信息中心对齐，计算纵向的偏移量 */
  RIAIDAnchorGroupAttributes_AnchorItemAttributes_AnchorInfoVerticalAlign_AnchorVerticalCenter = 2,

  /** 锚点底部与锚点信息底部对齐，计算纵向的偏移量 */
  RIAIDAnchorGroupAttributes_AnchorItemAttributes_AnchorInfoVerticalAlign_AnchorVerticalBottom = 3,
};

GPBEnumDescriptor *RIAIDAnchorGroupAttributes_AnchorItemAttributes_AnchorInfoVerticalAlign_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDAnchorGroupAttributes_AnchorItemAttributes_AnchorInfoVerticalAlign_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDCommonAttributes_ShapeType

typedef GPB_ENUM(RIAIDCommonAttributes_ShapeType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDCommonAttributes_ShapeType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RIAIDCommonAttributes_ShapeType_ShapeTypeUnknown = 0,
  RIAIDCommonAttributes_ShapeType_ShapeTypeRectangle = 1,
};

GPBEnumDescriptor *RIAIDCommonAttributes_ShapeType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDCommonAttributes_ShapeType_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDSwipeGesture_GestureSwipeDirection

/** swipe手势方向枚举 */
typedef GPB_ENUM(RIAIDSwipeGesture_GestureSwipeDirection) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDSwipeGesture_GestureSwipeDirection_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RIAIDSwipeGesture_GestureSwipeDirection_SwipeDirectionNone = 0,

  /** 右 */
  RIAIDSwipeGesture_GestureSwipeDirection_SwipeDirectionRight = 1,

  /** 左 */
  RIAIDSwipeGesture_GestureSwipeDirection_SwipeDirectionLeft = 2,

  /** 上 */
  RIAIDSwipeGesture_GestureSwipeDirection_SwipeDirectionUp = 3,

  /** 下 */
  RIAIDSwipeGesture_GestureSwipeDirection_SwipeDirectionDown = 4,
};

GPBEnumDescriptor *RIAIDSwipeGesture_GestureSwipeDirection_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDSwipeGesture_GestureSwipeDirection_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDAttributes_AttributeType

typedef GPB_ENUM(RIAIDAttributes_AttributeType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDAttributes_AttributeType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 未知属性 */
  RIAIDAttributes_AttributeType_AttributeUnknown = 0,

  /** 视频的当前播放位置，单位：ms */
  RIAIDAttributes_AttributeType_AttributeVideoPosition = 1,

  /** 视频的总播放时长，累加，单位：ms */
  RIAIDAttributes_AttributeType_AttributeVideoTotalDuration = 2,
};

GPBEnumDescriptor *RIAIDAttributes_AttributeType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDAttributes_AttributeType_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDNode_ClassType

/** 可支持点击等事件的类型：1，2，4，6 */
typedef GPB_ENUM(RIAIDNode_ClassType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDNode_ClassType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RIAIDNode_ClassType_ClassTypeUnknown = 0,

  /** 子组件 */
  RIAIDNode_ClassType_ClassTypeItemImage = 1,
  RIAIDNode_ClassType_ClassTypeItemLottie = 2,
  RIAIDNode_ClassType_ClassTypeItemSpace = 3,
  RIAIDNode_ClassType_ClassTypeItemText = 4,

  /** 盒子组件 */
  RIAIDNode_ClassType_ClassTypeLayoutAbsolute = 5,
  RIAIDNode_ClassType_ClassTypeLayoutButton = 6,
  RIAIDNode_ClassType_ClassTypeLayoutHorizontal = 7,
  RIAIDNode_ClassType_ClassTypeLayoutHScroll = 8,
  RIAIDNode_ClassType_ClassTypeLayoutSquare = 9,
  RIAIDNode_ClassType_ClassTypeLayoutVertical = 10,
  RIAIDNode_ClassType_ClassTypeLayoutVScroll = 11,
  RIAIDNode_ClassType_ClassTypeItemVideo = 12,

  /** 锚点盒子，内部只包裹锚点。有安全区的概念，对应的属性为AnchorGroupAttributes */
  RIAIDNode_ClassType_ClassTypeItemAnchor = 13,
};

GPBEnumDescriptor *RIAIDNode_ClassType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDNode_ClassType_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDADDeviceMotionTriggerModel_DeviceMotionType

/** 设备运动类型 */
typedef GPB_ENUM(RIAIDADDeviceMotionTriggerModel_DeviceMotionType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDADDeviceMotionTriggerModel_DeviceMotionType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RIAIDADDeviceMotionTriggerModel_DeviceMotionType_DeviceMotionTypeUnknown = 0,

  /** 设备加速度 */
  RIAIDADDeviceMotionTriggerModel_DeviceMotionType_DeviceMotionTypeUseracceleration = 1,

  /** 旋转加速度 */
  RIAIDADDeviceMotionTriggerModel_DeviceMotionType_DeviceMotionTypeRotationrate = 2,
};

GPBEnumDescriptor *RIAIDADDeviceMotionTriggerModel_DeviceMotionType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDADDeviceMotionTriggerModel_DeviceMotionType_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDADTemplateTransitionModel_TemplateType

typedef GPB_ENUM(RIAIDADTemplateTransitionModel_TemplateType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDADTemplateTransitionModel_TemplateType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RIAIDADTemplateTransitionModel_TemplateType_TemplateTypeNone = 0,

  /**
   * *
   * 从左边进入
   **/
  RIAIDADTemplateTransitionModel_TemplateType_EnterFromStart = 1,

  /**
   * *
   * 从左边移出
   **/
  RIAIDADTemplateTransitionModel_TemplateType_ExitFromStart = 2,
};

GPBEnumDescriptor *RIAIDADTemplateTransitionModel_TemplateType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDADTemplateTransitionModel_TemplateType_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDADAnimationModel_ViewPropertyType

/** 视图的一些属性 */
typedef GPB_ENUM(RIAIDADAnimationModel_ViewPropertyType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDADAnimationModel_ViewPropertyType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RIAIDADAnimationModel_ViewPropertyType_ViewPropertyNone = 0,

  /**
   * *
   * 参考{\@link android.view.View#ALPHA}
   **/
  RIAIDADAnimationModel_ViewPropertyType_Alpha = 1,

  /**
   * *
   * 参考{\@link android.view.View#SCALE_X}+{\@link android.view.View#SCALE_Y}
   **/
  RIAIDADAnimationModel_ViewPropertyType_Scale = 2,

  /**
   * *
   * 参考{\@link android.view.View#ROTATION}
   **/
  RIAIDADAnimationModel_ViewPropertyType_Rotation = 3,

  /**
   * *
   * 持续更改View宽度的{\@link android.animation.ValueAnimator}
   * 当等于-1则认为是view经过计算后的值
   **/
  RIAIDADAnimationModel_ViewPropertyType_Width = 4,

  /**
   * *
   * 持续更改View高度的{\@link android.animation.ValueAnimator}
   * 当等于-1则认为是view经过计算后的值
   **/
  RIAIDADAnimationModel_ViewPropertyType_Height = 5,

  /**
   * values长度是1，只有一个值
   * 可见，可响应点击事件,value = 0
   * 不可见，会占用空间，但不能响应点击事件，value = 1
   **/
  RIAIDADAnimationModel_ViewPropertyType_Hidden = 6,
};

GPBEnumDescriptor *RIAIDADAnimationModel_ViewPropertyType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDADAnimationModel_ViewPropertyType_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDADToastActionModel_ToastType

/** toast的类型 */
typedef GPB_ENUM(RIAIDADToastActionModel_ToastType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDADToastActionModel_ToastType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RIAIDADToastActionModel_ToastType_Info = 0,
  RIAIDADToastActionModel_ToastType_Notify = 1,
  RIAIDADToastActionModel_ToastType_Alert = 2,
};

GPBEnumDescriptor *RIAIDADToastActionModel_ToastType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDADToastActionModel_ToastType_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDADVideoActionModel_VideoControlType

typedef GPB_ENUM(RIAIDADVideoActionModel_VideoControlType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDADVideoActionModel_VideoControlType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RIAIDADVideoActionModel_VideoControlType_VideoNone = 0,

  /** 重新播放视频 */
  RIAIDADVideoActionModel_VideoControlType_VideoReplay = 1,

  /** 视频得到位置回到首帧，但不会重新播放 */
  RIAIDADVideoActionModel_VideoControlType_VideoPositionReset = 2,

  /** 新增暂停视频能力 */
  RIAIDADVideoActionModel_VideoControlType_VideoPause = 3,

  /** 新增继续播放控制能力 */
  RIAIDADVideoActionModel_VideoControlType_VideoPlay = 4,

  /** 静音 */
  RIAIDADVideoActionModel_VideoControlType_VideoSoundTurnOn = 5,

  /** 解除静音 */
  RIAIDADVideoActionModel_VideoControlType_VideoSoundTurnOff = 6,
};

GPBEnumDescriptor *RIAIDADVideoActionModel_VideoControlType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDADVideoActionModel_VideoControlType_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDADLottieActionModel_LottieControlType

typedef GPB_ENUM(RIAIDADLottieActionModel_LottieControlType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDADLottieActionModel_LottieControlType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RIAIDADLottieActionModel_LottieControlType_LottieNone = 0,

  /** 重新播放动画 */
  RIAIDADLottieActionModel_LottieControlType_LottieReplay = 1,

  /** 动画位置回到首帧，但不会重新播放 */
  RIAIDADLottieActionModel_LottieControlType_LottiePositionReset = 2,

  /** 新增暂停动画能力 */
  RIAIDADLottieActionModel_LottieControlType_LottiePause = 3,

  /** 新增继续播放控制能力 */
  RIAIDADLottieActionModel_LottieControlType_LottiePlay = 4,
};

GPBEnumDescriptor *RIAIDADLottieActionModel_LottieControlType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDADLottieActionModel_LottieControlType_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDADSceneRelationModel_SceneEdge

typedef GPB_ENUM(RIAIDADSceneRelationModel_SceneEdge) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDADSceneRelationModel_SceneEdge_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  RIAIDADSceneRelationModel_SceneEdge_SceneEdgeNone = 0,

  /** 左边，RTL为右边 */
  RIAIDADSceneRelationModel_SceneEdge_Start = 1,

  /** 上边 */
  RIAIDADSceneRelationModel_SceneEdge_Top = 2,

  /** 右边，RTL为左边 */
  RIAIDADSceneRelationModel_SceneEdge_End = 3,

  /** 下边 */
  RIAIDADSceneRelationModel_SceneEdge_Bottom = 4,
};

GPBEnumDescriptor *RIAIDADSceneRelationModel_SceneEdge_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDADSceneRelationModel_SceneEdge_IsValidValue(int32_t value);

#pragma mark - Enum RIAIDSystemKeyEnum_SystemKeys

typedef GPB_ENUM(RIAIDSystemKeyEnum_SystemKeys) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RIAIDSystemKeyEnum_SystemKeys_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 无效的key，适用于Riaid数据模型中定义的所有key，例:viewKey、sceneKe、triggerKey等 */
  RIAIDSystemKeyEnum_SystemKeys_InvalidKey = 0,

  /** 视频播放结束的内置触发器的key */
  RIAIDSystemKeyEnum_SystemKeys_TriggerKeyAdVideoEnd = -6662,

  /** 如果sceneKey是SCENE_KEY_CANVAS，认为是画布 */
  RIAIDSystemKeyEnum_SystemKeys_SceneKeyCanvas = -6661,
};

GPBEnumDescriptor *RIAIDSystemKeyEnum_SystemKeys_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RIAIDSystemKeyEnum_SystemKeys_IsValidValue(int32_t value);

#pragma mark - RIAIDRiaidRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface RIAIDRiaidRoot : GPBRootObject
@end

#pragma mark - RIAIDInt32Value

typedef GPB_ENUM(RIAIDInt32Value_FieldNumber) {
  RIAIDInt32Value_FieldNumber_Value = 1,
};

/**
 * *
 * Int32 的内部定义。因为目前我们使用的 Protobuff 不支持 optional 定义。而在某些场景下需要定义空值的数据。
 * 因而我们使用这个方式，来达到 optional 的目的。
 **/
@interface RIAIDInt32Value : GPBMessage

@property(nonatomic, readwrite) int32_t value;

@end

#pragma mark - RIAIDBoolValue

typedef GPB_ENUM(RIAIDBoolValue_FieldNumber) {
  RIAIDBoolValue_FieldNumber_Value = 1,
};

/**
 * *
 * Bool 的内部定义。因为目前我们使用的 Protobuff 不支持 optional 定义。而在某些场景下需要定义空值的数据。
 * 因而我们使用这个方式，来达到 optional 的目的。
 **/
@interface RIAIDBoolValue : GPBMessage

@property(nonatomic, readwrite) BOOL value;

@end

#pragma mark - RIAIDFloatValue

typedef GPB_ENUM(RIAIDFloatValue_FieldNumber) {
  RIAIDFloatValue_FieldNumber_Value = 1,
};

/**
 * *
 * Float 的内部定义。因为目前我们使用的 Protobuff 不支持 optional 定义。而在某些场景下需要定义空值的数据。
 * 因而我们使用这个方式，来达到 optional 的目的。
 **/
@interface RIAIDFloatValue : GPBMessage

@property(nonatomic, readwrite) float value;

@end

#pragma mark - RIAIDBasicVariable

typedef GPB_ENUM(RIAIDBasicVariable_FieldNumber) {
  RIAIDBasicVariable_FieldNumber_Key = 1,
  RIAIDBasicVariable_FieldNumber_Name = 2,
  RIAIDBasicVariable_FieldNumber_Value = 3,
};

/**
 * 变量定义，此变量为全局变量
 **/
@interface RIAIDBasicVariable : GPBMessage

/** 变量的地址，也是唯一标识，要求大于等于零 */
@property(nonatomic, readwrite) int32_t key;

/** 变量的名字，可以为空 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 变量的具体值 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDBasicVariableValue_Value *value;
/** Test to see if @c value has been set. */
@property(nonatomic, readwrite) BOOL hasValue;

@end

#pragma mark - RIAIDBasicVariableValue

@interface RIAIDBasicVariableValue : GPBMessage

@end

#pragma mark - RIAIDBasicVariableValue_Value

typedef GPB_ENUM(RIAIDBasicVariableValue_Value_FieldNumber) {
  RIAIDBasicVariableValue_Value_FieldNumber_Type = 1,
  RIAIDBasicVariableValue_Value_FieldNumber_B = 2,
  RIAIDBasicVariableValue_Value_FieldNumber_I = 3,
  RIAIDBasicVariableValue_Value_FieldNumber_D = 4,
  RIAIDBasicVariableValue_Value_FieldNumber_S = 5,
};

@interface RIAIDBasicVariableValue_Value : GPBMessage

@property(nonatomic, readwrite) RIAIDBasicVariableValue_Type type;

/** 布尔类型，默认是false */
@property(nonatomic, readwrite) BOOL b;

/** integer 类型统一定义为 int64 类型，默认是0 */
@property(nonatomic, readwrite) int64_t i;

/** 浮点类型 统一定义为 double 类型,默认是0.0 */
@property(nonatomic, readwrite) double d;

/** 字符串类型 默认是nil */
@property(nonatomic, readwrite, copy, null_resettable) NSString *s;

@end

/**
 * Fetches the raw value of a @c RIAIDBasicVariableValue_Value's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDBasicVariableValue_Value_Type_RawValue(RIAIDBasicVariableValue_Value *message);
/**
 * Sets the raw value of an @c RIAIDBasicVariableValue_Value's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDBasicVariableValue_Value_Type_RawValue(RIAIDBasicVariableValue_Value *message, int32_t value);

#pragma mark - RIAIDPoint

typedef GPB_ENUM(RIAIDPoint_FieldNumber) {
  RIAIDPoint_FieldNumber_X = 1,
  RIAIDPoint_FieldNumber_Y = 2,
};

/**
 * ///////////////////// 布局 start
 * 点的坐标，可以是偏移量定义
 **/
@interface RIAIDPoint : GPBMessage

@property(nonatomic, readwrite) float x;

@property(nonatomic, readwrite) float y;

@end

#pragma mark - RIAIDLayout

typedef GPB_ENUM(RIAIDLayout_FieldNumber) {
  RIAIDLayout_FieldNumber_Priority = 1,
  RIAIDLayout_FieldNumber_Weight = 2,
  RIAIDLayout_FieldNumber_Margin = 3,
  RIAIDLayout_FieldNumber_Padding = 4,
  RIAIDLayout_FieldNumber_Width = 5,
  RIAIDLayout_FieldNumber_Height = 6,
  RIAIDLayout_FieldNumber_MaxWidth = 7,
  RIAIDLayout_FieldNumber_MaxHeight = 8,
};

/**
 * *
 * 布局属性，通过 Layout 可以控制一个控件在界面上的布局属性。
 **/
@interface RIAIDLayout : GPBMessage

/** 优先级 */
@property(nonatomic, readwrite) int32_t priority;

/** 权重，用来均分剩余空间的 */
@property(nonatomic, readwrite) int32_t weight;

/** 组件和组件的距离 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDLayout_Edge *margin;
/** Test to see if @c margin has been set. */
@property(nonatomic, readwrite) BOOL hasMargin;

/** 组件的内部边距 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDLayout_Edge *padding;
/** Test to see if @c padding has been set. */
@property(nonatomic, readwrite) BOOL hasPadding;

/** 实际服务端下发尺寸 */
@property(nonatomic, readwrite) float width;

/** 实际服务端下发宽度 */
@property(nonatomic, readwrite) float height;

/** 最大宽度 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDFloatValue *maxWidth;
/** Test to see if @c maxWidth has been set. */
@property(nonatomic, readwrite) BOOL hasMaxWidth;

/** 最大高度 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDFloatValue *maxHeight;
/** Test to see if @c maxHeight has been set. */
@property(nonatomic, readwrite) BOOL hasMaxHeight;

@end

#pragma mark - RIAIDLayout_Edge

typedef GPB_ENUM(RIAIDLayout_Edge_FieldNumber) {
  RIAIDLayout_Edge_FieldNumber_Start = 1,
  RIAIDLayout_Edge_FieldNumber_End = 2,
  RIAIDLayout_Edge_FieldNumber_Top = 3,
  RIAIDLayout_Edge_FieldNumber_Bottom = 4,
};

@interface RIAIDLayout_Edge : GPBMessage

/** 横向开始 */
@property(nonatomic, readwrite) float start;

/** 横向结束 */
@property(nonatomic, readwrite) float end;

/** 纵向顶部 */
@property(nonatomic, readwrite) float top;

/** 纵向底部 */
@property(nonatomic, readwrite) float bottom;

@end

#pragma mark - RIAIDCornerRadius

typedef GPB_ENUM(RIAIDCornerRadius_FieldNumber) {
  RIAIDCornerRadius_FieldNumber_TopStart = 1,
  RIAIDCornerRadius_FieldNumber_BottomStart = 2,
  RIAIDCornerRadius_FieldNumber_TopEnd = 3,
  RIAIDCornerRadius_FieldNumber_BottomEnd = 4,
};

/**
 * *
 * 圆角属性控制。通过这个对象，可以控制控件的圆角属性。
 **/
@interface RIAIDCornerRadius : GPBMessage

@property(nonatomic, readwrite) float topStart;

@property(nonatomic, readwrite) float bottomStart;

@property(nonatomic, readwrite) float topEnd;

@property(nonatomic, readwrite) float bottomEnd;

@end

#pragma mark - RIAIDGradient

typedef GPB_ENUM(RIAIDGradient_FieldNumber) {
  RIAIDGradient_FieldNumber_Type = 1,
  RIAIDGradient_FieldNumber_Angle = 2,
  RIAIDGradient_FieldNumber_ColorsArray = 3,
};

/**
 * *
 * 渐变属性控制。通过这个对象，可以控制控件的渐变属性。
 **/
@interface RIAIDGradient : GPBMessage

@property(nonatomic, readwrite) RIAIDGradient_GradientType type;

/** 这个定义枚举过于费力，只能从上诉角度选择 */
@property(nonatomic, readwrite) RIAIDGradient_GradientAngle angle;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *colorsArray;
/** The number of items in @c colorsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger colorsArray_Count;

@end

/**
 * Fetches the raw value of a @c RIAIDGradient's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDGradient_Type_RawValue(RIAIDGradient *message);
/**
 * Sets the raw value of an @c RIAIDGradient's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDGradient_Type_RawValue(RIAIDGradient *message, int32_t value);

/**
 * Fetches the raw value of a @c RIAIDGradient's @c angle property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDGradient_Angle_RawValue(RIAIDGradient *message);
/**
 * Sets the raw value of an @c RIAIDGradient's @c angle property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDGradient_Angle_RawValue(RIAIDGradient *message, int32_t value);

#pragma mark - RIAIDStroke

typedef GPB_ENUM(RIAIDStroke_FieldNumber) {
  RIAIDStroke_FieldNumber_Width = 1,
  RIAIDStroke_FieldNumber_Color = 2,
  RIAIDStroke_FieldNumber_DashWidth = 3,
  RIAIDStroke_FieldNumber_DashGap = 4,
};

/**
 * 边框线
 **/
@interface RIAIDStroke : GPBMessage

/** 边框宽度 */
@property(nonatomic, readwrite) float width;

/** 边框颜色 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *color;

/** 虚线的宽度，0代表实线 */
@property(nonatomic, readwrite) float dashWidth;

/** 虚线的间隔 */
@property(nonatomic, readwrite) float dashGap;

@end

#pragma mark - RIAIDShadow

typedef GPB_ENUM(RIAIDShadow_FieldNumber) {
  RIAIDShadow_FieldNumber_OffsetX = 1,
  RIAIDShadow_FieldNumber_OffsetY = 2,
  RIAIDShadow_FieldNumber_Color = 3,
  RIAIDShadow_FieldNumber_Radius = 4,
};

/**
 * 阴影
 **/
@interface RIAIDShadow : GPBMessage

/** 水平偏移量 */
@property(nonatomic, readwrite) float offsetX;

/** 垂直偏移量 */
@property(nonatomic, readwrite) float offsetY;

/** 颜色，很好理解bro */
@property(nonatomic, readwrite, copy, null_resettable) NSString *color;

/** 半径 */
@property(nonatomic, readwrite) float radius;

@end

#pragma mark - RIAIDTextAttributes

typedef GPB_ENUM(RIAIDTextAttributes_FieldNumber) {
  RIAIDTextAttributes_FieldNumber_Text = 1,
  RIAIDTextAttributes_FieldNumber_FontSize = 2,
  RIAIDTextAttributes_FieldNumber_FontName = 3,
  RIAIDTextAttributes_FieldNumber_FontColor = 4,
  RIAIDTextAttributes_FieldNumber_MaxLines = 5,
  RIAIDTextAttributes_FieldNumber_Ellipsize = 6,
  RIAIDTextAttributes_FieldNumber_Align = 7,
  RIAIDTextAttributes_FieldNumber_Bold = 8,
  RIAIDTextAttributes_FieldNumber_Tilt = 9,
  RIAIDTextAttributes_FieldNumber_LineMode = 10,
  RIAIDTextAttributes_FieldNumber_LineSpace = 11,
  RIAIDTextAttributes_FieldNumber_HighlightColor = 12,
  RIAIDTextAttributes_FieldNumber_RichListArray = 13,
  RIAIDTextAttributes_FieldNumber_LineHeight = 14,
};

@interface RIAIDTextAttributes : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *text;

@property(nonatomic, readwrite, strong, null_resettable) RIAIDFloatValue *fontSize;
/** Test to see if @c fontSize has been set. */
@property(nonatomic, readwrite) BOOL hasFontSize;

@property(nonatomic, readwrite, copy, null_resettable) NSString *fontName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *fontColor;

@property(nonatomic, readwrite, strong, null_resettable) RIAIDInt32Value *maxLines;
/** Test to see if @c maxLines has been set. */
@property(nonatomic, readwrite) BOOL hasMaxLines;

@property(nonatomic, readwrite) RIAIDTextAttributes_Ellipsize ellipsize;

@property(nonatomic, readwrite, strong, null_resettable) RIAIDTextAttributes_Align *align;
/** Test to see if @c align has been set. */
@property(nonatomic, readwrite) BOOL hasAlign;

/** 是否加粗 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDBoolValue *bold;
/** Test to see if @c bold has been set. */
@property(nonatomic, readwrite) BOOL hasBold;

/** 是否斜体 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDBoolValue *tilt;
/** Test to see if @c tilt has been set. */
@property(nonatomic, readwrite) BOOL hasTilt;

@property(nonatomic, readwrite) RIAIDTextAttributes_LineMode lineMode;

/** 行间距 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDFloatValue *lineSpace;
/** Test to see if @c lineSpace has been set. */
@property(nonatomic, readwrite) BOOL hasLineSpace;

/** 按压态的高亮色 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *highlightColor;

/** 富文本集合 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDTextAttributes_RichText*> *richListArray;
/** The number of items in @c richListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger richListArray_Count;

/** 行高 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDFloatValue *lineHeight;
/** Test to see if @c lineHeight has been set. */
@property(nonatomic, readwrite) BOOL hasLineHeight;

@end

/**
 * Fetches the raw value of a @c RIAIDTextAttributes's @c ellipsize property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDTextAttributes_Ellipsize_RawValue(RIAIDTextAttributes *message);
/**
 * Sets the raw value of an @c RIAIDTextAttributes's @c ellipsize property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDTextAttributes_Ellipsize_RawValue(RIAIDTextAttributes *message, int32_t value);

/**
 * Fetches the raw value of a @c RIAIDTextAttributes's @c lineMode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDTextAttributes_LineMode_RawValue(RIAIDTextAttributes *message);
/**
 * Sets the raw value of an @c RIAIDTextAttributes's @c lineMode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDTextAttributes_LineMode_RawValue(RIAIDTextAttributes *message, int32_t value);

#pragma mark - RIAIDTextAttributes_Align

typedef GPB_ENUM(RIAIDTextAttributes_Align_FieldNumber) {
  RIAIDTextAttributes_Align_FieldNumber_Horizontal = 1,
  RIAIDTextAttributes_Align_FieldNumber_Vertical = 2,
};

/**
 * 对齐方式
 **/
@interface RIAIDTextAttributes_Align : GPBMessage

/** start end center_horizontal */
@property(nonatomic, readwrite) RIAIDTextAttributes_Align_Horizontal horizontal;

/** top bottom center_vertical */
@property(nonatomic, readwrite) RIAIDTextAttributes_Align_Vertical vertical;

@end

/**
 * Fetches the raw value of a @c RIAIDTextAttributes_Align's @c horizontal property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDTextAttributes_Align_Horizontal_RawValue(RIAIDTextAttributes_Align *message);
/**
 * Sets the raw value of an @c RIAIDTextAttributes_Align's @c horizontal property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDTextAttributes_Align_Horizontal_RawValue(RIAIDTextAttributes_Align *message, int32_t value);

/**
 * Fetches the raw value of a @c RIAIDTextAttributes_Align's @c vertical property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDTextAttributes_Align_Vertical_RawValue(RIAIDTextAttributes_Align *message);
/**
 * Sets the raw value of an @c RIAIDTextAttributes_Align's @c vertical property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDTextAttributes_Align_Vertical_RawValue(RIAIDTextAttributes_Align *message, int32_t value);

#pragma mark - RIAIDTextAttributes_RichText

typedef GPB_ENUM(RIAIDTextAttributes_RichText_FieldNumber) {
  RIAIDTextAttributes_RichText_FieldNumber_PlaceHolder = 1,
  RIAIDTextAttributes_RichText_FieldNumber_Content = 2,
  RIAIDTextAttributes_RichText_FieldNumber_Handler = 3,
  RIAIDTextAttributes_RichText_FieldNumber_RichAlign = 4,
};

/**
 * 富文本
 **/
@interface RIAIDTextAttributes_RichText : GPBMessage

/** 匹配文本 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *placeHolder;

/** 内容 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDNode *content;
/** Test to see if @c content has been set. */
@property(nonatomic, readwrite) BOOL hasContent;

/** 响应行为 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDHandler *handler;
/** Test to see if @c handler has been set. */
@property(nonatomic, readwrite) BOOL hasHandler;

/** 富文本对齐方式 */
@property(nonatomic, readwrite) RIAIDTextAttributes_RichText_RichAlign richAlign;

@end

/**
 * Fetches the raw value of a @c RIAIDTextAttributes_RichText's @c richAlign property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDTextAttributes_RichText_RichAlign_RawValue(RIAIDTextAttributes_RichText *message);
/**
 * Sets the raw value of an @c RIAIDTextAttributes_RichText's @c richAlign property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDTextAttributes_RichText_RichAlign_RawValue(RIAIDTextAttributes_RichText *message, int32_t value);

#pragma mark - RIAIDImageAttributes

typedef GPB_ENUM(RIAIDImageAttributes_FieldNumber) {
  RIAIDImageAttributes_FieldNumber_URL = 1,
  RIAIDImageAttributes_FieldNumber_HighlightURL = 2,
  RIAIDImageAttributes_FieldNumber_ScaleType = 3,
  RIAIDImageAttributes_FieldNumber_RtlURL = 4,
  RIAIDImageAttributes_FieldNumber_RtlHighlightURL = 5,
  RIAIDImageAttributes_FieldNumber_ColorFilter = 6,
};

@interface RIAIDImageAttributes : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *highlightURL;

/** 有以下集中形式 */
@property(nonatomic, readwrite) RIAIDImageAttributes_ScaleType scaleType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *rtlURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *rtlHighlightURL;

/** 值为一个hex的颜色。用于为图像设置着色选项，将除了透明的颜色，其他的颜色全都替换为color_filter指定的颜色 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *colorFilter;

@end

/**
 * Fetches the raw value of a @c RIAIDImageAttributes's @c scaleType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDImageAttributes_ScaleType_RawValue(RIAIDImageAttributes *message);
/**
 * Sets the raw value of an @c RIAIDImageAttributes's @c scaleType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDImageAttributes_ScaleType_RawValue(RIAIDImageAttributes *message, int32_t value);

#pragma mark - RIAIDLottieAttributes

typedef GPB_ENUM(RIAIDLottieAttributes_FieldNumber) {
  RIAIDLottieAttributes_FieldNumber_URL = 1,
  RIAIDLottieAttributes_FieldNumber_Speed = 2,
  RIAIDLottieAttributes_FieldNumber_Progress = 3,
  RIAIDLottieAttributes_FieldNumber_Repeat = 4,
  RIAIDLottieAttributes_FieldNumber_RepeatMode = 5,
  RIAIDLottieAttributes_FieldNumber_AutoPlay = 6,
  RIAIDLottieAttributes_FieldNumber_ReplaceTextListArray = 7,
  RIAIDLottieAttributes_FieldNumber_ReplaceImageListArray = 8,
  RIAIDLottieAttributes_FieldNumber_ScaleType = 9,
  RIAIDLottieAttributes_FieldNumber_ReplaceImageSupportNet = 10,
  RIAIDLottieAttributes_FieldNumber_ReplaceKeyPathColorListArray = 11,
};

@interface RIAIDLottieAttributes : GPBMessage

/** lottie的链接地址 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** lottie播放速度 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDFloatValue *speed;
/** Test to see if @c speed has been set. */
@property(nonatomic, readwrite) BOOL hasSpeed;

/** 默认开始进度 0~1 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDFloatValue *progress;
/** Test to see if @c progress has been set. */
@property(nonatomic, readwrite) BOOL hasProgress;

/** 是否重复播放，如果否就只播放一次 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDBoolValue *repeat;
/** Test to see if @c repeat has been set. */
@property(nonatomic, readwrite) BOOL hasRepeat;

/** 重复播放的模式 */
@property(nonatomic, readwrite) RIAIDLottieAttributes_RepeatMode repeatMode;

/** 是否要重新开始播放 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDBoolValue *autoPlay;
/** Test to see if @c autoPlay has been set. */
@property(nonatomic, readwrite) BOOL hasAutoPlay;

/** 文本替换 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDLottieAttributes_ReplaceText*> *replaceTextListArray;
/** The number of items in @c replaceTextListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger replaceTextListArray_Count;

/** 图片替换 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDLottieAttributes_ReplaceImage*> *replaceImageListArray;
/** The number of items in @c replaceImageListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger replaceImageListArray_Count;

/** Lottie的适配模式 */
@property(nonatomic, readwrite) RIAIDLottieAttributes_ScaleType scaleType;

/** 替换图片是否支持图片。如果是false，仅支持本地图片下载好了的，才能替换，如果是true，则可以在播放期间下载图片并替换 */
@property(nonatomic, readwrite) BOOL replaceImageSupportNet;

/** lottie路径颜色替换 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDLottieAttributes_ReplaceKeyPathColor*> *replaceKeyPathColorListArray;
/** The number of items in @c replaceKeyPathColorListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger replaceKeyPathColorListArray_Count;

@end

/**
 * Fetches the raw value of a @c RIAIDLottieAttributes's @c repeatMode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDLottieAttributes_RepeatMode_RawValue(RIAIDLottieAttributes *message);
/**
 * Sets the raw value of an @c RIAIDLottieAttributes's @c repeatMode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDLottieAttributes_RepeatMode_RawValue(RIAIDLottieAttributes *message, int32_t value);

/**
 * Fetches the raw value of a @c RIAIDLottieAttributes's @c scaleType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDLottieAttributes_ScaleType_RawValue(RIAIDLottieAttributes *message);
/**
 * Sets the raw value of an @c RIAIDLottieAttributes's @c scaleType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDLottieAttributes_ScaleType_RawValue(RIAIDLottieAttributes *message, int32_t value);

#pragma mark - RIAIDLottieAttributes_ReplaceText

typedef GPB_ENUM(RIAIDLottieAttributes_ReplaceText_FieldNumber) {
  RIAIDLottieAttributes_ReplaceText_FieldNumber_PlaceHolder = 1,
  RIAIDLottieAttributes_ReplaceText_FieldNumber_RealText = 2,
};

@interface RIAIDLottieAttributes_ReplaceText : GPBMessage

/** 需要被替换的lottie里面的文本 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *placeHolder;

/** 需要被展示的目标文本 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *realText;

@end

#pragma mark - RIAIDLottieAttributes_ReplaceImage

typedef GPB_ENUM(RIAIDLottieAttributes_ReplaceImage_FieldNumber) {
  RIAIDLottieAttributes_ReplaceImage_FieldNumber_PlaceImageId = 1,
  RIAIDLottieAttributes_ReplaceImage_FieldNumber_ImageAddress = 2,
};

@interface RIAIDLottieAttributes_ReplaceImage : GPBMessage

/** 需要被替换的图片的id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *placeImageId;

/** 需要被替换的图片的地址，可以直接是一个图片链接url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *imageAddress;

@end

#pragma mark - RIAIDLottieAttributes_ReplaceKeyPathColor

typedef GPB_ENUM(RIAIDLottieAttributes_ReplaceKeyPathColor_FieldNumber) {
  RIAIDLottieAttributes_ReplaceKeyPathColor_FieldNumber_KeyPathArray = 1,
  RIAIDLottieAttributes_ReplaceKeyPathColor_FieldNumber_Color = 2,
};

@interface RIAIDLottieAttributes_ReplaceKeyPathColor : GPBMessage

/** 需要替换颜色的key-path */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *keyPathArray;
/** The number of items in @c keyPathArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger keyPathArray_Count;

/** 要替换的颜色，hex格式 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *color;

@end

#pragma mark - RIAIDScrollAttributes

typedef GPB_ENUM(RIAIDScrollAttributes_FieldNumber) {
  RIAIDScrollAttributes_FieldNumber_ShowScrollbar = 1,
};

@interface RIAIDScrollAttributes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) RIAIDBoolValue *showScrollbar;
/** Test to see if @c showScrollbar has been set. */
@property(nonatomic, readwrite) BOOL hasShowScrollbar;

@end

#pragma mark - RIAIDButtonAttributes

typedef GPB_ENUM(RIAIDButtonAttributes_FieldNumber) {
  RIAIDButtonAttributes_FieldNumber_Content = 1,
  RIAIDButtonAttributes_FieldNumber_HighlightStateListArray = 2,
};

@interface RIAIDButtonAttributes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) RIAIDNode *content;
/** Test to see if @c content has been set. */
@property(nonatomic, readwrite) BOOL hasContent;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDButtonAttributes_HighlightState*> *highlightStateListArray;
/** The number of items in @c highlightStateListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger highlightStateListArray_Count;

@end

#pragma mark - RIAIDButtonAttributes_HighlightState

typedef GPB_ENUM(RIAIDButtonAttributes_HighlightState_FieldNumber) {
  RIAIDButtonAttributes_HighlightState_FieldNumber_Key = 1,
  RIAIDButtonAttributes_HighlightState_FieldNumber_Attributes = 2,
};

@interface RIAIDButtonAttributes_HighlightState : GPBMessage

@property(nonatomic, readwrite) int32_t key;

@property(nonatomic, readwrite, strong, null_resettable) RIAIDAttributes *attributes;
/** Test to see if @c attributes has been set. */
@property(nonatomic, readwrite) BOOL hasAttributes;

@end

#pragma mark - RIAIDVideoAttributes

typedef GPB_ENUM(RIAIDVideoAttributes_FieldNumber) {
  RIAIDVideoAttributes_FieldNumber_AutoMute = 1,
  RIAIDVideoAttributes_FieldNumber_AutoLoop = 2,
  RIAIDVideoAttributes_FieldNumber_AutoSeekTime = 3,
  RIAIDVideoAttributes_FieldNumber_AutoPlay = 4,
  RIAIDVideoAttributes_FieldNumber_URL = 5,
  RIAIDVideoAttributes_FieldNumber_CoverURL = 6,
  RIAIDVideoAttributes_FieldNumber_Manifest = 7,
  RIAIDVideoAttributes_FieldNumber_AdapterType = 8,
  RIAIDVideoAttributes_FieldNumber_Opaque = 9,
};

/**
 * 新增Video属性对象
 **/
@interface RIAIDVideoAttributes : GPBMessage

/** 是否静音 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDBoolValue *autoMute;
/** Test to see if @c autoMute has been set. */
@property(nonatomic, readwrite) BOOL hasAutoMute;

/** 是否循环播放 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDBoolValue *autoLoop;
/** Test to see if @c autoLoop has been set. */
@property(nonatomic, readwrite) BOOL hasAutoLoop;

/** 视频进度，理解为seek */
@property(nonatomic, readwrite) int64_t autoSeekTime;

/** 是否自动播放 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDBoolValue *autoPlay;
/** Test to see if @c autoPlay has been set. */
@property(nonatomic, readwrite) BOOL hasAutoPlay;

/** 视频链接 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 首帧图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *coverURL;

/** manifest */
@property(nonatomic, readwrite, copy, null_resettable) NSString *manifest;

/** 视频适配模式 */
@property(nonatomic, readwrite) RIAIDVideoAttributes_AdapterType adapterType;

/** 不透明，如果没赋值默认为false，也就是默认透明 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDBoolValue *opaque;
/** Test to see if @c opaque has been set. */
@property(nonatomic, readwrite) BOOL hasOpaque;

@end

/**
 * Fetches the raw value of a @c RIAIDVideoAttributes's @c adapterType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDVideoAttributes_AdapterType_RawValue(RIAIDVideoAttributes *message);
/**
 * Sets the raw value of an @c RIAIDVideoAttributes's @c adapterType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDVideoAttributes_AdapterType_RawValue(RIAIDVideoAttributes *message, int32_t value);

#pragma mark - RIAIDAnchorGroupAttributes

typedef GPB_ENUM(RIAIDAnchorGroupAttributes_FieldNumber) {
  RIAIDAnchorGroupAttributes_FieldNumber_ItemsArray = 1,
};

/**
 * 锚点组的属性对象
 **/
@interface RIAIDAnchorGroupAttributes : GPBMessage

/** 可以支持多个锚点，锚点间是独立的，只不过是在同一个安全区内，位置可以重叠 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDAnchorGroupAttributes_AnchorItemAttributes*> *itemsArray;
/** The number of items in @c itemsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger itemsArray_Count;

@end

#pragma mark - RIAIDAnchorGroupAttributes_AnchorItemAttributes

typedef GPB_ENUM(RIAIDAnchorGroupAttributes_AnchorItemAttributes_FieldNumber) {
  RIAIDAnchorGroupAttributes_AnchorItemAttributes_FieldNumber_AnchorPoint = 1,
  RIAIDAnchorGroupAttributes_AnchorItemAttributes_FieldNumber_AnchorPointX = 2,
  RIAIDAnchorGroupAttributes_AnchorItemAttributes_FieldNumber_AnchorPointY = 3,
  RIAIDAnchorGroupAttributes_AnchorItemAttributes_FieldNumber_AnchorInfo = 4,
  RIAIDAnchorGroupAttributes_AnchorItemAttributes_FieldNumber_AnchorInfoStartOffsetPointX = 5,
  RIAIDAnchorGroupAttributes_AnchorItemAttributes_FieldNumber_AnchorInfoAlignOffsetPointY = 6,
  RIAIDAnchorGroupAttributes_AnchorItemAttributes_FieldNumber_AnchorVerticalAlign = 7,
};

@interface RIAIDAnchorGroupAttributes_AnchorItemAttributes : GPBMessage

/** 锚点渲染Node */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDNode *anchorPoint;
/** Test to see if @c anchorPoint has been set. */
@property(nonatomic, readwrite) BOOL hasAnchorPoint;

/** 锚点在安全区内的横坐标 */
@property(nonatomic, readwrite) int32_t anchorPointX;

/** 锚点在安全区的纵坐标 */
@property(nonatomic, readwrite) int32_t anchorPointY;

/** 锚点边侧信息的渲染Node */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDNode *anchorInfo;
/** Test to see if @c anchorInfo has been set. */
@property(nonatomic, readwrite) BOOL hasAnchorInfo;

/** 锚点边侧信息Node距离锚点横坐标的偏移量（横向偏移量为正数） */
@property(nonatomic, readwrite) float anchorInfoStartOffsetPointX;

/** 锚点边侧信息Node距离锚点纵坐标的偏移量，纵坐标的偏移量要与align结合使用 (纵向偏移量可以为负数) */
@property(nonatomic, readwrite) float anchorInfoAlignOffsetPointY;

/** 埋点边侧信息Node纵坐标相对于锚点原点的对齐方式 */
@property(nonatomic, readwrite) RIAIDAnchorGroupAttributes_AnchorItemAttributes_AnchorInfoVerticalAlign anchorVerticalAlign;

@end

/**
 * Fetches the raw value of a @c RIAIDAnchorGroupAttributes_AnchorItemAttributes's @c anchorVerticalAlign property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDAnchorGroupAttributes_AnchorItemAttributes_AnchorVerticalAlign_RawValue(RIAIDAnchorGroupAttributes_AnchorItemAttributes *message);
/**
 * Sets the raw value of an @c RIAIDAnchorGroupAttributes_AnchorItemAttributes's @c anchorVerticalAlign property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDAnchorGroupAttributes_AnchorItemAttributes_AnchorVerticalAlign_RawValue(RIAIDAnchorGroupAttributes_AnchorItemAttributes *message, int32_t value);

#pragma mark - RIAIDCommonAttributes

typedef GPB_ENUM(RIAIDCommonAttributes_FieldNumber) {
  RIAIDCommonAttributes_FieldNumber_ShapeType = 1,
  RIAIDCommonAttributes_FieldNumber_CornerRadius = 2,
  RIAIDCommonAttributes_FieldNumber_BackgroundColor = 3,
  RIAIDCommonAttributes_FieldNumber_Gradient = 4,
  RIAIDCommonAttributes_FieldNumber_Stroke = 5,
  RIAIDCommonAttributes_FieldNumber_Shadow = 6,
  RIAIDCommonAttributes_FieldNumber_Alpha = 7,
  RIAIDCommonAttributes_FieldNumber_Hidden = 8,
};

/**
 * 这个是基础通用属性
 **/
@interface RIAIDCommonAttributes : GPBMessage

@property(nonatomic, readwrite) RIAIDCommonAttributes_ShapeType shapeType;

/** 背景圆角 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDCornerRadius *cornerRadius;
/** Test to see if @c cornerRadius has been set. */
@property(nonatomic, readwrite) BOOL hasCornerRadius;

/** 背景色 ARGB 8位16进制 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *backgroundColor;

/** 渐变 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDGradient *gradient;
/** Test to see if @c gradient has been set. */
@property(nonatomic, readwrite) BOOL hasGradient;

/** 边框线 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDStroke *stroke;
/** Test to see if @c stroke has been set. */
@property(nonatomic, readwrite) BOOL hasStroke;

/** 阴影 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDShadow *shadow;
/** Test to see if @c shadow has been set. */
@property(nonatomic, readwrite) BOOL hasShadow;

/** 透明度,0~1数值越小越透明 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDFloatValue *alpha;
/** Test to see if @c alpha has been set. */
@property(nonatomic, readwrite) BOOL hasAlpha;

/** 是否隐藏不可见 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDBoolValue *hidden;
/** Test to see if @c hidden has been set. */
@property(nonatomic, readwrite) BOOL hasHidden;

@end

/**
 * Fetches the raw value of a @c RIAIDCommonAttributes's @c shapeType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDCommonAttributes_ShapeType_RawValue(RIAIDCommonAttributes *message);
/**
 * Sets the raw value of an @c RIAIDCommonAttributes's @c shapeType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDCommonAttributes_ShapeType_RawValue(RIAIDCommonAttributes *message, int32_t value);

#pragma mark - RIAIDResponder

typedef GPB_ENUM(RIAIDResponder_FieldNumber) {
  RIAIDResponder_FieldNumber_TriggerKeysArray = 1,
};

@interface RIAIDResponder : GPBMessage

/** triggerKey数组 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *triggerKeysArray;
/** The number of items in @c triggerKeysArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger triggerKeysArray_Count;

@end

#pragma mark - RIAIDHandler

typedef GPB_ENUM(RIAIDHandler_FieldNumber) {
  RIAIDHandler_FieldNumber_Click = 1,
  RIAIDHandler_FieldNumber_DoubleClick = 2,
  RIAIDHandler_FieldNumber_LongPress = 3,
};

@interface RIAIDHandler : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) RIAIDResponder *click;
/** Test to see if @c click has been set. */
@property(nonatomic, readwrite) BOOL hasClick;

@property(nonatomic, readwrite, strong, null_resettable) RIAIDResponder *doubleClick;
/** Test to see if @c doubleClick has been set. */
@property(nonatomic, readwrite) BOOL hasDoubleClick;

@property(nonatomic, readwrite, strong, null_resettable) RIAIDResponder *longPress;
/** Test to see if @c longPress has been set. */
@property(nonatomic, readwrite) BOOL hasLongPress;

@end

#pragma mark - RIAIDGestureModel

typedef GPB_ENUM(RIAIDGestureModel_FieldNumber) {
  RIAIDGestureModel_FieldNumber_Swipe = 1,
};

/**
 * 高级手势
 **/
@interface RIAIDGestureModel : GPBMessage

/** 滑动 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDSwipeGesture *swipe;
/** Test to see if @c swipe has been set. */
@property(nonatomic, readwrite) BOOL hasSwipe;

@end

#pragma mark - RIAIDSwipeGesture

typedef GPB_ENUM(RIAIDSwipeGesture_FieldNumber) {
  RIAIDSwipeGesture_FieldNumber_TriggerKeysArray = 1,
  RIAIDSwipeGesture_FieldNumber_Direction = 2,
};

/**
 * 滑动手势
 **/
@interface RIAIDSwipeGesture : GPBMessage

/** 手势对应触发的triggers */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *triggerKeysArray;
/** The number of items in @c triggerKeysArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger triggerKeysArray_Count;

/** 滑动方向 */
@property(nonatomic, readwrite) RIAIDSwipeGesture_GestureSwipeDirection direction;

@end

/**
 * Fetches the raw value of a @c RIAIDSwipeGesture's @c direction property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDSwipeGesture_Direction_RawValue(RIAIDSwipeGesture *message);
/**
 * Sets the raw value of an @c RIAIDSwipeGesture's @c direction property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDSwipeGesture_Direction_RawValue(RIAIDSwipeGesture *message, int32_t value);

#pragma mark - RIAIDVideoHandler

typedef GPB_ENUM(RIAIDVideoHandler_FieldNumber) {
  RIAIDVideoHandler_FieldNumber_Impression = 1,
  RIAIDVideoHandler_FieldNumber_Finish = 2,
  RIAIDVideoHandler_FieldNumber_Pause = 3,
  RIAIDVideoHandler_FieldNumber_Start = 4,
  RIAIDVideoHandler_FieldNumber_Resume = 5,
};

/**
 * 这个是视频控件独有的，不通用，不放在点击的Handler里面
 **/
@interface RIAIDVideoHandler : GPBMessage

/** 首帧 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDResponder *impression;
/** Test to see if @c impression has been set. */
@property(nonatomic, readwrite) BOOL hasImpression;

/** 播放完成 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDResponder *finish;
/** Test to see if @c finish has been set. */
@property(nonatomic, readwrite) BOOL hasFinish;

/** 播放暂停 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDResponder *pause;
/** Test to see if @c pause has been set. */
@property(nonatomic, readwrite) BOOL hasPause;

/** 播放 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDResponder *start;
/** Test to see if @c start has been set. */
@property(nonatomic, readwrite) BOOL hasStart;

/** 将暂停的video播放 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDResponder *resume;
/** Test to see if @c resume has been set. */
@property(nonatomic, readwrite) BOOL hasResume;

@end

#pragma mark - RIAIDLottieHandler

typedef GPB_ENUM(RIAIDLottieHandler_FieldNumber) {
  RIAIDLottieHandler_FieldNumber_Start = 1,
  RIAIDLottieHandler_FieldNumber_End = 2,
  RIAIDLottieHandler_FieldNumber_ReplaceImageSuccess = 3,
  RIAIDLottieHandler_FieldNumber_ReplaceImageFalse = 4,
};

/**
 * 这个是Lottie控件独有的，不通用，不放在点击的Handler里面
 * Lottie是可以替换图片的，如果有替换图片的配置，会调用相关的Responder
 **/
@interface RIAIDLottieHandler : GPBMessage

/** 动画开始播放 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDResponder *start;
/** Test to see if @c start has been set. */
@property(nonatomic, readwrite) BOOL hasStart;

/** 动画播放完成 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDResponder *end;
/** Test to see if @c end has been set. */
@property(nonatomic, readwrite) BOOL hasEnd;

/** 替换图片成功 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDResponder *replaceImageSuccess;
/** Test to see if @c replaceImageSuccess has been set. */
@property(nonatomic, readwrite) BOOL hasReplaceImageSuccess;

/** 替换图片失败 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDResponder *replaceImageFalse;
/** Test to see if @c replaceImageFalse has been set. */
@property(nonatomic, readwrite) BOOL hasReplaceImageFalse;

@end

#pragma mark - RIAIDAttributes

typedef GPB_ENUM(RIAIDAttributes_FieldNumber) {
  RIAIDAttributes_FieldNumber_Common = 1,
  RIAIDAttributes_FieldNumber_Text = 2,
  RIAIDAttributes_FieldNumber_Image = 3,
  RIAIDAttributes_FieldNumber_Lottie = 4,
  RIAIDAttributes_FieldNumber_Scroll = 5,
  RIAIDAttributes_FieldNumber_Button = 6,
  RIAIDAttributes_FieldNumber_Video = 7,
  RIAIDAttributes_FieldNumber_AnchorGroup = 8,
};

@interface RIAIDAttributes : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) RIAIDCommonAttributes *common;
/** Test to see if @c common has been set. */
@property(nonatomic, readwrite) BOOL hasCommon;

@property(nonatomic, readwrite, strong, null_resettable) RIAIDTextAttributes *text;
/** Test to see if @c text has been set. */
@property(nonatomic, readwrite) BOOL hasText;

@property(nonatomic, readwrite, strong, null_resettable) RIAIDImageAttributes *image;
/** Test to see if @c image has been set. */
@property(nonatomic, readwrite) BOOL hasImage;

@property(nonatomic, readwrite, strong, null_resettable) RIAIDLottieAttributes *lottie;
/** Test to see if @c lottie has been set. */
@property(nonatomic, readwrite) BOOL hasLottie;

@property(nonatomic, readwrite, strong, null_resettable) RIAIDScrollAttributes *scroll;
/** Test to see if @c scroll has been set. */
@property(nonatomic, readwrite) BOOL hasScroll;

@property(nonatomic, readwrite, strong, null_resettable) RIAIDButtonAttributes *button;
/** Test to see if @c button has been set. */
@property(nonatomic, readwrite) BOOL hasButton;

@property(nonatomic, readwrite, strong, null_resettable) RIAIDVideoAttributes *video;
/** Test to see if @c video has been set. */
@property(nonatomic, readwrite) BOOL hasVideo;

@property(nonatomic, readwrite, strong, null_resettable) RIAIDAnchorGroupAttributes *anchorGroup;
/** Test to see if @c anchorGroup has been set. */
@property(nonatomic, readwrite) BOOL hasAnchorGroup;

@end

#pragma mark - RIAIDNode

typedef GPB_ENUM(RIAIDNode_FieldNumber) {
  RIAIDNode_FieldNumber_ClassType = 1,
  RIAIDNode_FieldNumber_Key = 2,
  RIAIDNode_FieldNumber_Layout = 3,
  RIAIDNode_FieldNumber_Handler = 4,
  RIAIDNode_FieldNumber_Attributes = 5,
  RIAIDNode_FieldNumber_ChildrenArray = 6,
  RIAIDNode_FieldNumber_DebugInfo = 7,
  RIAIDNode_FieldNumber_VideoHandler = 8,
  RIAIDNode_FieldNumber_LottieHandler = 9,
  RIAIDNode_FieldNumber_GesturesArray = 10,
};

@interface RIAIDNode : GPBMessage

/** 当前组件的类型 */
@property(nonatomic, readwrite) RIAIDNode_ClassType classType;

/**
 * 当前组件的唯一标识
 * 当前组件的唯一标识
 **/
@property(nonatomic, readwrite) int32_t key;

/** 当前组件的布局属性，尺寸，距离等 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDLayout *layout;
/** Test to see if @c layout has been set. */
@property(nonatomic, readwrite) BOOL hasLayout;

/** 当前组件的响应的行为 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDHandler *handler;
/** Test to see if @c handler has been set. */
@property(nonatomic, readwrite) BOOL hasHandler;

/** 当前组件的样式属性 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDAttributes *attributes;
/** Test to see if @c attributes has been set. */
@property(nonatomic, readwrite) BOOL hasAttributes;

/** 子组件，只有盒子布局这个属性才会有意义 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDNode*> *childrenArray;
/** The number of items in @c childrenArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger childrenArray_Count;

/** 用来说明该Node是做什么用的，简单描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *debugInfo;

/** 视频的监听 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDVideoHandler *videoHandler;
/** Test to see if @c videoHandler has been set. */
@property(nonatomic, readwrite) BOOL hasVideoHandler;

/** Lottie的监听 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDLottieHandler *lottieHandler;
/** Test to see if @c lottieHandler has been set. */
@property(nonatomic, readwrite) BOOL hasLottieHandler;

/** 支持高级手势 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDGestureModel*> *gesturesArray;
/** The number of items in @c gesturesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger gesturesArray_Count;

@end

/**
 * Fetches the raw value of a @c RIAIDNode's @c classType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDNode_ClassType_RawValue(RIAIDNode *message);
/**
 * Sets the raw value of an @c RIAIDNode's @c classType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDNode_ClassType_RawValue(RIAIDNode *message, int32_t value);

#pragma mark - RIAIDADConditionModel

typedef GPB_ENUM(RIAIDADConditionModel_FieldNumber) {
  RIAIDADConditionModel_FieldNumber_ConditionName = 1,
  RIAIDADConditionModel_FieldNumber_ConditionValue = 2,
};

/**
 * 用以记录Browser当前的条件，概念类似于环境变量
 **/
@interface RIAIDADConditionModel : GPBMessage

/** 条件的名字 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *conditionName;

/** 条件对应的值 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *conditionValue;

@end

#pragma mark - RIAIDADLogicUnitModel

typedef GPB_ENUM(RIAIDADLogicUnitModel_FieldNumber) {
  RIAIDADLogicUnitModel_FieldNumber_Condition = 1,
  RIAIDADLogicUnitModel_FieldNumber_Compare = 2,
  RIAIDADLogicUnitModel_FieldNumber_Variable = 3,
};

/**
 * 逻辑单元，用以比较condition或variable是否符合逻辑
 * condition和variable只能一个有值
 **/
@interface RIAIDADLogicUnitModel : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) RIAIDADConditionModel *condition;
/** Test to see if @c condition has been set. */
@property(nonatomic, readwrite) BOOL hasCondition;

/** 此compare比较的是condition或variable与全局存储的condition或variable的值 */
@property(nonatomic, readwrite) RIAIDCompareOperator compare;

@property(nonatomic, readwrite, strong, null_resettable) RIAIDBasicVariable *variable;
/** Test to see if @c variable has been set. */
@property(nonatomic, readwrite) BOOL hasVariable;

@end

/**
 * Fetches the raw value of a @c RIAIDADLogicUnitModel's @c compare property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDADLogicUnitModel_Compare_RawValue(RIAIDADLogicUnitModel *message);
/**
 * Sets the raw value of an @c RIAIDADLogicUnitModel's @c compare property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDADLogicUnitModel_Compare_RawValue(RIAIDADLogicUnitModel *message, int32_t value);

#pragma mark - RIAIDADConditionLogicModel

typedef GPB_ENUM(RIAIDADConditionLogicModel_FieldNumber) {
  RIAIDADConditionLogicModel_FieldNumber_Operator_p = 1,
  RIAIDADConditionLogicModel_FieldNumber_UnitsArray = 2,
  RIAIDADConditionLogicModel_FieldNumber_ActionsArray = 3,
};

/**
 * 如果内部logic，units组成的条件符合，执行action_models
 **/
@interface RIAIDADConditionLogicModel : GPBMessage

@property(nonatomic, readwrite) RIAIDLogicOperator operator_p;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDADLogicUnitModel*> *unitsArray;
/** The number of items in @c unitsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger unitsArray_Count;

/** Action集合 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDADActionModel*> *actionsArray;
/** The number of items in @c actionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger actionsArray_Count;

@end

/**
 * Fetches the raw value of a @c RIAIDADConditionLogicModel's @c operator_p property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDADConditionLogicModel_Operator_p_RawValue(RIAIDADConditionLogicModel *message);
/**
 * Sets the raw value of an @c RIAIDADConditionLogicModel's @c operator_p property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDADConditionLogicModel_Operator_p_RawValue(RIAIDADConditionLogicModel *message, int32_t value);

#pragma mark - RIAIDADConditionTriggerModel

typedef GPB_ENUM(RIAIDADConditionTriggerModel_FieldNumber) {
  RIAIDADConditionTriggerModel_FieldNumber_Key = 1,
  RIAIDADConditionTriggerModel_FieldNumber_LogicsArray = 2,
  RIAIDADConditionTriggerModel_FieldNumber_DebugInfo = 3,
};

@interface RIAIDADConditionTriggerModel : GPBMessage

/** condition trigger key */
@property(nonatomic, readwrite) int32_t key;

/**
 * ADConditionLogicModel
 * 同一时间，数组内应当有且仅有一个ADConditionLogicModel是符合执行条件的
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDADConditionLogicModel*> *logicsArray;
/** The number of items in @c logicsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger logicsArray_Count;

/** 用来说明该触发器是做什么用的，简单描述。 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *debugInfo;

@end

#pragma mark - RIAIDADTriggerModel

typedef GPB_ENUM(RIAIDADTriggerModel_FieldNumber) {
  RIAIDADTriggerModel_FieldNumber_Timeout = 1,
  RIAIDADTriggerModel_FieldNumber_Heartbeat = 2,
  RIAIDADTriggerModel_FieldNumber_General = 3,
  RIAIDADTriggerModel_FieldNumber_Condition = 4,
  RIAIDADTriggerModel_FieldNumber_VideoDuration = 5,
  RIAIDADTriggerModel_FieldNumber_DeviceMotion = 6,
};

/**
 * 所有Trigger的封装类
 * 注意，这里面的成员只能有一个，因为客户端使用的MessageNano，因为解析原因，暂不使用oneof
 **/
@interface RIAIDADTriggerModel : GPBMessage

/** 定时触发器，例如：3秒后触发操作 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADTimeoutTriggerModel *timeout;
/** Test to see if @c timeout has been set. */
@property(nonatomic, readwrite) BOOL hasTimeout;

/** 心跳触发器，例如：每隔3秒，触发操作 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADHeartBeatTriggerModel *heartbeat;
/** Test to see if @c heartbeat has been set. */
@property(nonatomic, readwrite) BOOL hasHeartbeat;

/** 普通触发器 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADGeneralTriggerModel *general;
/** Test to see if @c general has been set. */
@property(nonatomic, readwrite) BOOL hasGeneral;

/** 代表一个不确定的操作，需要根据当时的环境变量，来确定具体的操作 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADConditionTriggerModel *condition;
/** Test to see if @c condition has been set. */
@property(nonatomic, readwrite) BOOL hasCondition;

/** video计时器的触发器，用来匹配一个video的播放时间，来触发行为 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADVideoDurationTimeoutTriggerModel *videoDuration;
/** Test to see if @c videoDuration has been set. */
@property(nonatomic, readwrite) BOOL hasVideoDuration;

/** 设备运动触发器，例：扭一扭、摇一摇 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADDeviceMotionTriggerModel *deviceMotion;
/** Test to see if @c deviceMotion has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceMotion;

@end

#pragma mark - RIAIDADTimeoutTriggerModel

typedef GPB_ENUM(RIAIDADTimeoutTriggerModel_FieldNumber) {
  RIAIDADTimeoutTriggerModel_FieldNumber_Key = 1,
  RIAIDADTimeoutTriggerModel_FieldNumber_Interval = 2,
  RIAIDADTimeoutTriggerModel_FieldNumber_ActionsArray = 3,
  RIAIDADTimeoutTriggerModel_FieldNumber_DebugInfo = 4,
};

/**
 * 定时触发器，例如：3秒后触发操作
 **/
@interface RIAIDADTimeoutTriggerModel : GPBMessage

/** 触发器的key */
@property(nonatomic, readwrite) int32_t key;

/** 触发时机，单位毫秒，例：time=1000，则为1s后触发 */
@property(nonatomic, readwrite) int64_t interval;

/** Action集合 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDADActionModel*> *actionsArray;
/** The number of items in @c actionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger actionsArray_Count;

/** 用来说明该触发器是做什么用的，简单描述。 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *debugInfo;

@end

#pragma mark - RIAIDADHeartBeatTriggerModel

typedef GPB_ENUM(RIAIDADHeartBeatTriggerModel_FieldNumber) {
  RIAIDADHeartBeatTriggerModel_FieldNumber_Key = 1,
  RIAIDADHeartBeatTriggerModel_FieldNumber_Interval = 2,
  RIAIDADHeartBeatTriggerModel_FieldNumber_Count = 3,
  RIAIDADHeartBeatTriggerModel_FieldNumber_ActionsArray = 4,
  RIAIDADHeartBeatTriggerModel_FieldNumber_DebugInfo = 5,
};

/**
 * 心跳触发器，例如：每隔3秒，触发操作
 **/
@interface RIAIDADHeartBeatTriggerModel : GPBMessage

/** 触发器的key */
@property(nonatomic, readwrite) int32_t key;

/** 触发间隔，单位毫秒，例：time=1000，每隔1秒，触发一次 */
@property(nonatomic, readwrite) int64_t interval;

/** 需要执行次数 */
@property(nonatomic, readwrite) int32_t count;

/** Action集合 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDADActionModel*> *actionsArray;
/** The number of items in @c actionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger actionsArray_Count;

/** 用来说明该触发器是做什么用的，简单描述。 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *debugInfo;

@end

#pragma mark - RIAIDADGeneralTriggerModel

typedef GPB_ENUM(RIAIDADGeneralTriggerModel_FieldNumber) {
  RIAIDADGeneralTriggerModel_FieldNumber_Key = 1,
  RIAIDADGeneralTriggerModel_FieldNumber_ActionsArray = 2,
  RIAIDADGeneralTriggerModel_FieldNumber_DebugInfo = 3,
};

/**
 * 普通触发器
 **/
@interface RIAIDADGeneralTriggerModel : GPBMessage

/** 触发器的key */
@property(nonatomic, readwrite) int32_t key;

/** Action集合 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDADActionModel*> *actionsArray;
/** The number of items in @c actionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger actionsArray_Count;

/** 用来说明该触发器是做什么用的，简单描述。 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *debugInfo;

@end

#pragma mark - RIAIDADVideoDurationTimeoutTriggerModel

typedef GPB_ENUM(RIAIDADVideoDurationTimeoutTriggerModel_FieldNumber) {
  RIAIDADVideoDurationTimeoutTriggerModel_FieldNumber_Key = 1,
  RIAIDADVideoDurationTimeoutTriggerModel_FieldNumber_ViewKey = 2,
  RIAIDADVideoDurationTimeoutTriggerModel_FieldNumber_Interval = 3,
  RIAIDADVideoDurationTimeoutTriggerModel_FieldNumber_ActionsArray = 4,
  RIAIDADVideoDurationTimeoutTriggerModel_FieldNumber_DebugInfo = 5,
};

/**
 * Video计时器，Time Source是播放器，而不是系统
 **/
@interface RIAIDADVideoDurationTimeoutTriggerModel : GPBMessage

/** 触发器的key */
@property(nonatomic, readwrite) int32_t key;

/** 播放器的key，也可以是外部播放器的key */
@property(nonatomic, readwrite) int32_t viewKey;

/** 触发时机，单位毫秒，例：time=1000，则为1s后触发 */
@property(nonatomic, readwrite) int64_t interval;

/** Action集合 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDADActionModel*> *actionsArray;
/** The number of items in @c actionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger actionsArray_Count;

/** 用来说明该触发器是做什么用的，简单描述。 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *debugInfo;

@end

#pragma mark - RIAIDDeviceAxisUnitModel

typedef GPB_ENUM(RIAIDDeviceAxisUnitModel_FieldNumber) {
  RIAIDDeviceAxisUnitModel_FieldNumber_Type = 1,
  RIAIDDeviceAxisUnitModel_FieldNumber_Threshold = 2,
  RIAIDDeviceAxisUnitModel_FieldNumber_Compare = 3,
};

/**
 * 轴的逻辑单元
 **/
@interface RIAIDDeviceAxisUnitModel : GPBMessage

/** 轴类型 */
@property(nonatomic, readwrite) RIAIDDeviceAxisType type;

/**
 * 临界值
 * 扭一扭场景：临界值为陀螺仪旋转速率，单位：弧度/秒。若临界值为2*PI，代表每秒钟旋转了360度。
 * 摇一摇场景：临界值沿x/y/z轴的加速力（不包括重力)，单位：米/秒²。
 **/
@property(nonatomic, readwrite) float threshold;

/** 比较运算符 */
@property(nonatomic, readwrite) RIAIDCompareOperator compare;

@end

/**
 * Fetches the raw value of a @c RIAIDDeviceAxisUnitModel's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDDeviceAxisUnitModel_Type_RawValue(RIAIDDeviceAxisUnitModel *message);
/**
 * Sets the raw value of an @c RIAIDDeviceAxisUnitModel's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDDeviceAxisUnitModel_Type_RawValue(RIAIDDeviceAxisUnitModel *message, int32_t value);

/**
 * Fetches the raw value of a @c RIAIDDeviceAxisUnitModel's @c compare property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDDeviceAxisUnitModel_Compare_RawValue(RIAIDDeviceAxisUnitModel *message);
/**
 * Sets the raw value of an @c RIAIDDeviceAxisUnitModel's @c compare property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDDeviceAxisUnitModel_Compare_RawValue(RIAIDDeviceAxisUnitModel *message, int32_t value);

#pragma mark - RIAIDDeviceAxisConditionModel

typedef GPB_ENUM(RIAIDDeviceAxisConditionModel_FieldNumber) {
  RIAIDDeviceAxisConditionModel_FieldNumber_UnitsArray = 1,
  RIAIDDeviceAxisConditionModel_FieldNumber_Operator_p = 2,
};

/**
 * 设备轴的条件集合
 **/
@interface RIAIDDeviceAxisConditionModel : GPBMessage

/** 轴逻辑单元数组 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDDeviceAxisUnitModel*> *unitsArray;
/** The number of items in @c unitsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger unitsArray_Count;

/** 逻辑运算符，判断条件数组是与或非的依据 */
@property(nonatomic, readwrite) RIAIDLogicOperator operator_p;

@end

/**
 * Fetches the raw value of a @c RIAIDDeviceAxisConditionModel's @c operator_p property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDDeviceAxisConditionModel_Operator_p_RawValue(RIAIDDeviceAxisConditionModel *message);
/**
 * Sets the raw value of an @c RIAIDDeviceAxisConditionModel's @c operator_p property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDDeviceAxisConditionModel_Operator_p_RawValue(RIAIDDeviceAxisConditionModel *message, int32_t value);

#pragma mark - RIAIDADDeviceMotionTriggerModel

typedef GPB_ENUM(RIAIDADDeviceMotionTriggerModel_FieldNumber) {
  RIAIDADDeviceMotionTriggerModel_FieldNumber_Key = 1,
  RIAIDADDeviceMotionTriggerModel_FieldNumber_MotionType = 2,
  RIAIDADDeviceMotionTriggerModel_FieldNumber_Condition = 3,
  RIAIDADDeviceMotionTriggerModel_FieldNumber_ActionsArray = 4,
};

/**
 * 设备运动触发器
 **/
@interface RIAIDADDeviceMotionTriggerModel : GPBMessage

/** 触发器的key */
@property(nonatomic, readwrite) int32_t key;

/** 设备运动类型 */
@property(nonatomic, readwrite) RIAIDADDeviceMotionTriggerModel_DeviceMotionType motionType;

/** 触发条件 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDDeviceAxisConditionModel *condition;
/** Test to see if @c condition has been set. */
@property(nonatomic, readwrite) BOOL hasCondition;

/** 满足条件会响应的Action */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDADActionModel*> *actionsArray;
/** The number of items in @c actionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger actionsArray_Count;

@end

/**
 * Fetches the raw value of a @c RIAIDADDeviceMotionTriggerModel's @c motionType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDADDeviceMotionTriggerModel_MotionType_RawValue(RIAIDADDeviceMotionTriggerModel *message);
/**
 * Sets the raw value of an @c RIAIDADDeviceMotionTriggerModel's @c motionType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDADDeviceMotionTriggerModel_MotionType_RawValue(RIAIDADDeviceMotionTriggerModel *message, int32_t value);

#pragma mark - RIAIDADTransitionModel

typedef GPB_ENUM(RIAIDADTransitionModel_FieldNumber) {
  RIAIDADTransitionModel_FieldNumber_Visibility = 1,
  RIAIDADTransitionModel_FieldNumber_Template_p = 2,
  RIAIDADTransitionModel_FieldNumber_Translation = 3,
  RIAIDADTransitionModel_FieldNumber_InSceneAnimation = 4,
  RIAIDADTransitionModel_FieldNumber_SceneShare = 5,
  RIAIDADTransitionModel_FieldNumber_Lottie = 6,
  RIAIDADTransitionModel_FieldNumber_RenderContent = 7,
  RIAIDADTransitionModel_FieldNumber_Bezier = 8,
};

/**
 * 所有TransitionModel的封装类
 * 注意，这里面的成员只能有一个，因为客户端使用的MessageNano，因为解析原因，暂不使用oneof
 **/
@interface RIAIDADTransitionModel : GPBMessage

/** 场景可见性转场描述 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADVisibilityTransitionModel *visibility;
/** Test to see if @c visibility has been set. */
@property(nonatomic, readwrite) BOOL hasVisibility;

/** 场景模板转场描述 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADTemplateTransitionModel *template_p;
/** Test to see if @c template_p has been set. */
@property(nonatomic, readwrite) BOOL hasTemplate_p;

/** 场景位置更改转场描述 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADTranslationTransitionModel *translation;
/** Test to see if @c translation has been set. */
@property(nonatomic, readwrite) BOOL hasTranslation;

/** 场景内的转场动画 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADInSceneAnimationTransitionModel *inSceneAnimation;
/** Test to see if @c inSceneAnimation has been set. */
@property(nonatomic, readwrite) BOOL hasInSceneAnimation;

/** 场景与场景的共享元素转场过渡动画 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADSceneShareTransitionModel *sceneShare;
/** Test to see if @c sceneShare has been set. */
@property(nonatomic, readwrite) BOOL hasSceneShare;

/** LottieTransitionModel */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADLottieTransitionModel *lottie;
/** Test to see if @c lottie has been set. */
@property(nonatomic, readwrite) BOOL hasLottie;

/** 场景内的特定Transition，用于更新render的内容 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADRenderContentTransitionModel *renderContent;
/** Test to see if @c renderContent has been set. */
@property(nonatomic, readwrite) BOOL hasRenderContent;

/** 场景间贝塞尔曲线转场 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADBezierTransitionModel *bezier;
/** Test to see if @c bezier has been set. */
@property(nonatomic, readwrite) BOOL hasBezier;

@end

#pragma mark - RIAIDADVisibilityTransitionModel

typedef GPB_ENUM(RIAIDADVisibilityTransitionModel_FieldNumber) {
  RIAIDADVisibilityTransitionModel_FieldNumber_SceneKey = 1,
  RIAIDADVisibilityTransitionModel_FieldNumber_Duration = 2,
  RIAIDADVisibilityTransitionModel_FieldNumber_StartAlpha = 3,
  RIAIDADVisibilityTransitionModel_FieldNumber_EndAlpha = 4,
  RIAIDADVisibilityTransitionModel_FieldNumber_Hidden = 5,
};

/**
 * 场景可见性转场描述
 **/
@interface RIAIDADVisibilityTransitionModel : GPBMessage

/** Transition对应的场景 */
@property(nonatomic, readwrite) int32_t sceneKey;

/** ms，动画执行的时间 */
@property(nonatomic, readwrite) int64_t duration;

/** [0-1] */
@property(nonatomic, readwrite) float startAlpha;

@property(nonatomic, readwrite) float endAlpha;

/** 目标状态要求是可见还是不可见 */
@property(nonatomic, readwrite) BOOL hidden;

@end

#pragma mark - RIAIDADTemplateTransitionModel

typedef GPB_ENUM(RIAIDADTemplateTransitionModel_FieldNumber) {
  RIAIDADTemplateTransitionModel_FieldNumber_SceneKey = 1,
  RIAIDADTemplateTransitionModel_FieldNumber_Duration = 2,
  RIAIDADTemplateTransitionModel_FieldNumber_Template_p = 3,
};

/**
 * 场景模板转场描述
 **/
@interface RIAIDADTemplateTransitionModel : GPBMessage

@property(nonatomic, readwrite) int32_t sceneKey;

@property(nonatomic, readwrite) int64_t duration;

@property(nonatomic, readwrite) RIAIDADTemplateTransitionModel_TemplateType template_p;

@end

/**
 * Fetches the raw value of a @c RIAIDADTemplateTransitionModel's @c template_p property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDADTemplateTransitionModel_Template_p_RawValue(RIAIDADTemplateTransitionModel *message);
/**
 * Sets the raw value of an @c RIAIDADTemplateTransitionModel's @c template_p property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDADTemplateTransitionModel_Template_p_RawValue(RIAIDADTemplateTransitionModel *message, int32_t value);

#pragma mark - RIAIDADTranslationTransitionModel

typedef GPB_ENUM(RIAIDADTranslationTransitionModel_FieldNumber) {
  RIAIDADTranslationTransitionModel_FieldNumber_SceneKey = 1,
  RIAIDADTranslationTransitionModel_FieldNumber_Duration = 2,
  RIAIDADTranslationTransitionModel_FieldNumber_SceneRelationsArray = 3,
};

/**
 * 场景位置更改转场描述
 **/
@interface RIAIDADTranslationTransitionModel : GPBMessage

@property(nonatomic, readwrite) int32_t sceneKey;

@property(nonatomic, readwrite) int64_t duration;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDADSceneRelationModel*> *sceneRelationsArray;
/** The number of items in @c sceneRelationsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sceneRelationsArray_Count;

@end

#pragma mark - RIAIDADInSceneAnimationTransitionModel

typedef GPB_ENUM(RIAIDADInSceneAnimationTransitionModel_FieldNumber) {
  RIAIDADInSceneAnimationTransitionModel_FieldNumber_ViewKey = 1,
  RIAIDADInSceneAnimationTransitionModel_FieldNumber_SceneKey = 2,
  RIAIDADInSceneAnimationTransitionModel_FieldNumber_Animation = 3,
};

/**
 * 场景内的转场动画
 **/
@interface RIAIDADInSceneAnimationTransitionModel : GPBMessage

@property(nonatomic, readwrite) int32_t viewKey;

@property(nonatomic, readwrite) int32_t sceneKey DEPRECATED_ATTRIBUTE;

@property(nonatomic, readwrite, strong, null_resettable) RIAIDADAnimationModel *animation;
/** Test to see if @c animation has been set. */
@property(nonatomic, readwrite) BOOL hasAnimation;

@end

#pragma mark - RIAIDADSceneShareTransitionModel

typedef GPB_ENUM(RIAIDADSceneShareTransitionModel_FieldNumber) {
  RIAIDADSceneShareTransitionModel_FieldNumber_StartSceneKey = 1,
  RIAIDADSceneShareTransitionModel_FieldNumber_EndSceneKey = 2,
  RIAIDADSceneShareTransitionModel_FieldNumber_Duration = 3,
};

/**
 * 场景与场景的共享元素转场过渡动画
 * 给到两个scene，两个scene若复用view，则其viewKey相同。如复用的view为ActionButton，SceneA的ActionButton作为起始态，SceneB
 * 的ActionButton作为最终态，然后执行动画
 **/
@interface RIAIDADSceneShareTransitionModel : GPBMessage

/** Transition对应的场景，作为起始态 */
@property(nonatomic, readwrite) int32_t startSceneKey;

/** Transition对应的目标场景，作为最终态 */
@property(nonatomic, readwrite) int32_t endSceneKey;

/** ms，起始态到最终态的动画时间。 */
@property(nonatomic, readwrite) int64_t duration;

@end

#pragma mark - RIAIDADLottieTransitionModel

typedef GPB_ENUM(RIAIDADLottieTransitionModel_FieldNumber) {
  RIAIDADLottieTransitionModel_FieldNumber_SceneKey = 1,
  RIAIDADLottieTransitionModel_FieldNumber_LottieType = 2,
  RIAIDADLottieTransitionModel_FieldNumber_ViewKeysArray = 3,
  RIAIDADLottieTransitionModel_FieldNumber_MaxProgress = 4,
  RIAIDADLottieTransitionModel_FieldNumber_Interval = 5,
};

@interface RIAIDADLottieTransitionModel : GPBMessage

/** 支持lottie的具体场景 */
@property(nonatomic, readwrite) int32_t sceneKey;

/** lottie的类型，目前支持progress */
@property(nonatomic, readwrite, copy, null_resettable) NSString *lottieType;

/** 可以为空，如果为空，则是该场景下支持lottie的所有组件改变状态 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *viewKeysArray;
/** The number of items in @c viewKeysArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger viewKeysArray_Count;

/** 最大的进度，如倒计时6s，则maxProgress为6000 */
@property(nonatomic, readwrite) int64_t maxProgress;

/** lottie状态更新间隔，如倒计时6s，每隔100ms触发一次状态，则interval为100 */
@property(nonatomic, readwrite) int64_t interval;

@end

#pragma mark - RIAIDADRenderContentTransitionModel

typedef GPB_ENUM(RIAIDADRenderContentTransitionModel_FieldNumber) {
  RIAIDADRenderContentTransitionModel_FieldNumber_SceneKey = 1,
  RIAIDADRenderContentTransitionModel_FieldNumber_ViewKey = 2,
  RIAIDADRenderContentTransitionModel_FieldNumber_RenderAttributes = 3,
};

/**
 * 场景内的特定Transition，用于更新render的内容
 **/
@interface RIAIDADRenderContentTransitionModel : GPBMessage

/** 要更新render内容的场景 */
@property(nonatomic, readwrite) int32_t sceneKey DEPRECATED_ATTRIBUTE;

/** 要更新的render其中的view */
@property(nonatomic, readwrite) int32_t viewKey;

/** 要更新的属性 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDAttributes *renderAttributes;
/** Test to see if @c renderAttributes has been set. */
@property(nonatomic, readwrite) BOOL hasRenderAttributes;

@end

#pragma mark - RIAIDADBezierTransitionModel

typedef GPB_ENUM(RIAIDADBezierTransitionModel_FieldNumber) {
  RIAIDADBezierTransitionModel_FieldNumber_StartSceneKey = 1,
  RIAIDADBezierTransitionModel_FieldNumber_TargetSceneKey = 2,
  RIAIDADBezierTransitionModel_FieldNumber_EndPointOffsetTargetScene = 3,
  RIAIDADBezierTransitionModel_FieldNumber_ControlFirstPointOffsetStartScene = 4,
  RIAIDADBezierTransitionModel_FieldNumber_ControlSecondPointOffsetTargetScene = 5,
  RIAIDADBezierTransitionModel_FieldNumber_Duration = 6,
};

/**
 * 贝塞尔曲线的场景位移转场动画，这里支持的是三阶贝塞尔曲线，当其中一个控制点值为空时，可以认为是二阶贝塞尔曲线。
 * 这里曲线起始点、结束点、控制点的坐标均参考指定场景的坐标位置。
 **/
@interface RIAIDADBezierTransitionModel : GPBMessage

/** 要开始执行贝塞尔曲线动画的场景，也就是起点 */
@property(nonatomic, readwrite) int32_t startSceneKey;

/** 贝塞尔曲线动画执行到终点的场景 */
@property(nonatomic, readwrite) int32_t targetSceneKey;

/**
 * 贝塞尔曲线终点x坐标，相对于场景target_scene的x的偏移量，正数为偏右，负数为偏左
 * 贝塞尔曲线终点y坐标，相对于场景target_scene的y的偏移量，正数为偏下，负数为偏上
 **/
@property(nonatomic, readwrite, strong, null_resettable) RIAIDPoint *endPointOffsetTargetScene;
/** Test to see if @c endPointOffsetTargetScene has been set. */
@property(nonatomic, readwrite) BOOL hasEndPointOffsetTargetScene;

/**
 * 贝塞尔曲线控制点一的x坐标，相对于场景start_scene的x的偏移量，正数为偏右，负数为偏左
 * 贝塞尔曲线控制点一的y坐标，相对于场景start_scene的y的偏移量，正数为偏下，负数为偏上
 **/
@property(nonatomic, readwrite, strong, null_resettable) RIAIDPoint *controlFirstPointOffsetStartScene;
/** Test to see if @c controlFirstPointOffsetStartScene has been set. */
@property(nonatomic, readwrite) BOOL hasControlFirstPointOffsetStartScene;

/**
 * 贝塞尔曲线控制点二的x坐标，相对于场景target_scene的x的偏移量，正数为偏右，负数为偏左
 * 贝塞尔曲线控制点二的y坐标，相对于场景target_scene的y的偏移量，正数为偏下，负数为偏上
 **/
@property(nonatomic, readwrite, strong, null_resettable) RIAIDPoint *controlSecondPointOffsetTargetScene;
/** Test to see if @c controlSecondPointOffsetTargetScene has been set. */
@property(nonatomic, readwrite) BOOL hasControlSecondPointOffsetTargetScene;

/** 执行时长，ms */
@property(nonatomic, readwrite) int64_t duration;

@end

#pragma mark - RIAIDADAnimationModel

typedef GPB_ENUM(RIAIDADAnimationModel_FieldNumber) {
  RIAIDADAnimationModel_FieldNumber_PropertyType = 1,
  RIAIDADAnimationModel_FieldNumber_Duration = 2,
  RIAIDADAnimationModel_FieldNumber_RepeatCount = 3,
  RIAIDADAnimationModel_FieldNumber_ValuesArray = 4,
  RIAIDADAnimationModel_FieldNumber_PivotX = 5,
  RIAIDADAnimationModel_FieldNumber_PivotY = 6,
};

/**
 * 广告的动画定义，用来描述了属性动画的一些配置 6
 **/
@interface RIAIDADAnimationModel : GPBMessage

@property(nonatomic, readwrite) RIAIDADAnimationModel_ViewPropertyType propertyType;

@property(nonatomic, readwrite) int64_t duration;

/** 如果等于-1则是重复执行 */
@property(nonatomic, readwrite) int32_t repeatCount;

/** 如果是宽或高的值，则-1是认为渲染好的宽高 */
@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *valuesArray;
/** The number of items in @c valuesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger valuesArray_Count;

/** x轴的轴点，如果为空，则默认为x轴中心点，用于缩放 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDFloatValue *pivotX;
/** Test to see if @c pivotX has been set. */
@property(nonatomic, readwrite) BOOL hasPivotX;

/** y轴的轴点，如果为空，则默认为y轴中心点，用于缩放 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDFloatValue *pivotY;
/** Test to see if @c pivotY has been set. */
@property(nonatomic, readwrite) BOOL hasPivotY;

@end

/**
 * Fetches the raw value of a @c RIAIDADAnimationModel's @c propertyType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDADAnimationModel_PropertyType_RawValue(RIAIDADAnimationModel *message);
/**
 * Sets the raw value of an @c RIAIDADAnimationModel's @c propertyType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDADAnimationModel_PropertyType_RawValue(RIAIDADAnimationModel *message, int32_t value);

#pragma mark - RIAIDADActionModel

typedef GPB_ENUM(RIAIDADActionModel_FieldNumber) {
  RIAIDADActionModel_FieldNumber_Transition = 1,
  RIAIDADActionModel_FieldNumber_Track = 2,
  RIAIDADActionModel_FieldNumber_Video = 3,
  RIAIDADActionModel_FieldNumber_URL = 4,
  RIAIDADActionModel_FieldNumber_ConditionChange = 5,
  RIAIDADActionModel_FieldNumber_CancelTimer = 6,
  RIAIDADActionModel_FieldNumber_Custom = 7,
  RIAIDADActionModel_FieldNumber_Trigger = 8,
  RIAIDADActionModel_FieldNumber_Conversion = 9,
  RIAIDADActionModel_FieldNumber_Step = 10,
  RIAIDADActionModel_FieldNumber_VariableChange = 11,
  RIAIDADActionModel_FieldNumber_CancelDeviceMotion = 12,
  RIAIDADActionModel_FieldNumber_Vibrator = 13,
  RIAIDADActionModel_FieldNumber_Beep = 14,
  RIAIDADActionModel_FieldNumber_Lottie = 15,
  RIAIDADActionModel_FieldNumber_Clickable = 16,
  RIAIDADActionModel_FieldNumber_Toast = 17,
  RIAIDADActionModel_FieldNumber_Function = 18,
  RIAIDADActionModel_FieldNumber_Dynamic = 19,
};

/**
 * 所有Action的封装类
 * 注意，这里面的成员只能有一个，因为客户端使用的MessageNano，因为解析原因，暂不使用oneof
 **/
@interface RIAIDADActionModel : GPBMessage

/** 所有Transition的行为，通常用于场景的转场或场景内动画 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADTransitionActionModel *transition;
/** Test to see if @c transition has been set. */
@property(nonatomic, readwrite) BOOL hasTransition;

/** 埋点的Action，由上层解析和发送 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADTrackActionModel *track;
/** Test to see if @c track has been set. */
@property(nonatomic, readwrite) BOOL hasTrack;

/** 视频播放控制的Action */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADVideoActionModel *video;
/** Test to see if @c video has been set. */
@property(nonatomic, readwrite) BOOL hasVideo;

/** url的Action，可以是直接跳转落地页，也可以转化跳转 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADUrlActionModel *URL;
/** Test to see if @c URL has been set. */
@property(nonatomic, readwrite) BOOL hasURL;

/** 条件变化Action */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADConditionChangeActionModel *conditionChange;
/** Test to see if @c conditionChange has been set. */
@property(nonatomic, readwrite) BOOL hasConditionChange;

/** 取消一个正在进行中的timerTrigger */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADCancelTimerActionModel *cancelTimer;
/** Test to see if @c cancelTimer has been set. */
@property(nonatomic, readwrite) BOOL hasCancelTimer;

/** 自定义的行为，用于透传的 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADCustomActionModel *custom;
/** Test to see if @c custom has been set. */
@property(nonatomic, readwrite) BOOL hasCustom;

/** 触发一个Trigger */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADTriggerActionModel *trigger;
/** Test to see if @c trigger has been set. */
@property(nonatomic, readwrite) BOOL hasTrigger;

/** 转化跳转的action */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADConversionActionModel *conversion;
/** Test to see if @c conversion has been set. */
@property(nonatomic, readwrite) BOOL hasConversion;

/** 分步执行的action，处理一个变量 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADStepActionModel *step;
/** Test to see if @c step has been set. */
@property(nonatomic, readwrite) BOOL hasStep;

/** 变量变化action */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADVariableChangeActionModel *variableChange;
/** Test to see if @c variableChange has been set. */
@property(nonatomic, readwrite) BOOL hasVariableChange;

/** 取消设备运动Action */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADCancelDeviceMotionActionModel *cancelDeviceMotion;
/** Test to see if @c cancelDeviceMotion has been set. */
@property(nonatomic, readwrite) BOOL hasCancelDeviceMotion;

/** 设备震动Action */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADVibratorActionModel *vibrator;
/** Test to see if @c vibrator has been set. */
@property(nonatomic, readwrite) BOOL hasVibrator;

/** 提示音Action */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADBeepActionModel *beep;
/** Test to see if @c beep has been set. */
@property(nonatomic, readwrite) BOOL hasBeep;

/** 控制Lottie */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADLottieActionModel *lottie;
/** Test to see if @c lottie has been set. */
@property(nonatomic, readwrite) BOOL hasLottie;

/** 控制视图的是否可点击 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADClickableActionModel *clickable;
/** Test to see if @c clickable has been set. */
@property(nonatomic, readwrite) BOOL hasClickable;

/** 弹出toast */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADToastActionModel *toast;
/** Test to see if @c toast has been set. */
@property(nonatomic, readwrite) BOOL hasToast;

/** 执行某些内置函数的行为 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADExecuteFunctionActionModel *function;
/** Test to see if @c function has been set. */
@property(nonatomic, readwrite) BOOL hasFunction;

/** 动态埋点的行为 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADDynamicTrackActionModel *dynamic;
/** Test to see if @c dynamic has been set. */
@property(nonatomic, readwrite) BOOL hasDynamic;

@end

#pragma mark - RIAIDADClickableActionModel

typedef GPB_ENUM(RIAIDADClickableActionModel_FieldNumber) {
  RIAIDADClickableActionModel_FieldNumber_ViewKey = 1,
  RIAIDADClickableActionModel_FieldNumber_Clickable = 2,
};

/**
 * 控制视图是否可点击的行为，即使是设置点击的handler，如果clickable为false，也不支持点击。
 **/
@interface RIAIDADClickableActionModel : GPBMessage

/** 视图的key */
@property(nonatomic, readwrite) int32_t viewKey;

/** false: 不支持点击  true: 支持点击 */
@property(nonatomic, readwrite) BOOL clickable;

@end

#pragma mark - RIAIDADToastActionModel

typedef GPB_ENUM(RIAIDADToastActionModel_FieldNumber) {
  RIAIDADToastActionModel_FieldNumber_Content = 1,
  RIAIDADToastActionModel_FieldNumber_ToastType = 2,
  RIAIDADToastActionModel_FieldNumber_Duration = 3,
};

/**
 * 展示一个toast，暂不自定义，使用系统的toast
 **/
@interface RIAIDADToastActionModel : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@property(nonatomic, readwrite) RIAIDADToastActionModel_ToastType toastType;

/** toast展示时间，有则生效 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDInt32Value *duration;
/** Test to see if @c duration has been set. */
@property(nonatomic, readwrite) BOOL hasDuration;

@end

/**
 * Fetches the raw value of a @c RIAIDADToastActionModel's @c toastType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDADToastActionModel_ToastType_RawValue(RIAIDADToastActionModel *message);
/**
 * Sets the raw value of an @c RIAIDADToastActionModel's @c toastType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDADToastActionModel_ToastType_RawValue(RIAIDADToastActionModel *message, int32_t value);

#pragma mark - RIAIDADExecuteFunctionActionModel

typedef GPB_ENUM(RIAIDADExecuteFunctionActionModel_FieldNumber) {
  RIAIDADExecuteFunctionActionModel_FieldNumber_FunctionKeysArray = 1,
};

/**
 * 执行指定的function
 **/
@interface RIAIDADExecuteFunctionActionModel : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *functionKeysArray;
/** The number of items in @c functionKeysArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger functionKeysArray_Count;

@end

#pragma mark - RIAIDADBeepActionModel

typedef GPB_ENUM(RIAIDADBeepActionModel_FieldNumber) {
  RIAIDADBeepActionModel_FieldNumber_URL = 1,
};

/**
 * 提示音Action
 **/
@interface RIAIDADBeepActionModel : GPBMessage

/**
 * url可以是本地资源，也可以是服务端资源
 * 本地资源格式：file://xxxx，服务端资源格式：https://xxxxx
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

@end

#pragma mark - RIAIDADVibratorActionModel

/**
 * 设备震动Action
 **/
@interface RIAIDADVibratorActionModel : GPBMessage

@end

#pragma mark - RIAIDADCancelDeviceMotionActionModel

typedef GPB_ENUM(RIAIDADCancelDeviceMotionActionModel_FieldNumber) {
  RIAIDADCancelDeviceMotionActionModel_FieldNumber_TriggerKey = 1,
};

/**
 * / 取消对该设备运动Trigger监听
 **/
@interface RIAIDADCancelDeviceMotionActionModel : GPBMessage

@property(nonatomic, readwrite) int32_t triggerKey;

@end

#pragma mark - RIAIDADTransitionActionModel

typedef GPB_ENUM(RIAIDADTransitionActionModel_FieldNumber) {
  RIAIDADTransitionActionModel_FieldNumber_Key = 1,
  RIAIDADTransitionActionModel_FieldNumber_TransitionsArray = 2,
};

/**
 * 所有Transition的行为，通常用于场景的转场或场景内动画
 **/
@interface RIAIDADTransitionActionModel : GPBMessage

/** 作为唯一标识 */
@property(nonatomic, readwrite) int32_t key;

/** Transition数组 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDADTransitionModel*> *transitionsArray;
/** The number of items in @c transitionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger transitionsArray_Count;

@end

#pragma mark - RIAIDADStepActionModel

typedef GPB_ENUM(RIAIDADStepActionModel_FieldNumber) {
  RIAIDADStepActionModel_FieldNumber_Max = 1,
  RIAIDADStepActionModel_FieldNumber_Min = 2,
  RIAIDADStepActionModel_FieldNumber_Step = 3,
  RIAIDADStepActionModel_FieldNumber_VariableKey = 4,
  RIAIDADStepActionModel_FieldNumber_TriggerKeysArray = 5,
};

/**
 * ADStepActionModel是一个分步的行为，分步行为需要对变量操作value+step，
 * 变量操作之后会对这个变量做内置函数的处理，最后触发触发器
 **/
@interface RIAIDADStepActionModel : GPBMessage

/** 变量操作不能超过这个最大值，如果超过了自动停止 */
@property(nonatomic, readwrite) int32_t max;

/** 变量操作不能小于这个最小值，如果小于了自动停止 */
@property(nonatomic, readwrite) int32_t min;

/** 间隔，可正可负 */
@property(nonatomic, readwrite) int32_t step;

/** 变量的地址，这个变量的Type要求是INTEGER */
@property(nonatomic, readwrite) int32_t variableKey;

/** 每步操作完变量后要执行的触发器 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *triggerKeysArray;
/** The number of items in @c triggerKeysArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger triggerKeysArray_Count;

@end

#pragma mark - RIAIDADTrackActionModel

typedef GPB_ENUM(RIAIDADTrackActionModel_FieldNumber) {
  RIAIDADTrackActionModel_FieldNumber_Parameters = 1,
  RIAIDADTrackActionModel_FieldNumber_Dynamic = 2,
};

/**
 * 埋点的Action，由上层解析和发送，这个行为透传给上层处理
 **/
@interface RIAIDADTrackActionModel : GPBMessage

/** 例如：[actionType=2, templateType=1] */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *parameters;
/** The number of items in @c parameters without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger parameters_Count;

/** 埋点模型下，嵌套动态埋点模型 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADDynamicTrackActionModel *dynamic;
/** Test to see if @c dynamic has been set. */
@property(nonatomic, readwrite) BOOL hasDynamic;

@end

#pragma mark - RIAIDADVideoActionModel

typedef GPB_ENUM(RIAIDADVideoActionModel_FieldNumber) {
  RIAIDADVideoActionModel_FieldNumber_Type = 1,
  RIAIDADVideoActionModel_FieldNumber_ViewKey = 2,
};

/**
 * 视频播放控制的Action，这个行为透传给上层处理
 **/
@interface RIAIDADVideoActionModel : GPBMessage

@property(nonatomic, readwrite) RIAIDADVideoActionModel_VideoControlType type;

/** render_key 都不等于0，才是内部的 */
@property(nonatomic, readwrite) int32_t viewKey;

@end

/**
 * Fetches the raw value of a @c RIAIDADVideoActionModel's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDADVideoActionModel_Type_RawValue(RIAIDADVideoActionModel *message);
/**
 * Sets the raw value of an @c RIAIDADVideoActionModel's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDADVideoActionModel_Type_RawValue(RIAIDADVideoActionModel *message, int32_t value);

#pragma mark - RIAIDADLottieActionModel

typedef GPB_ENUM(RIAIDADLottieActionModel_FieldNumber) {
  RIAIDADLottieActionModel_FieldNumber_Type = 1,
  RIAIDADLottieActionModel_FieldNumber_ViewKey = 2,
};

/**
 * Lottie播放控制的Action
 **/
@interface RIAIDADLottieActionModel : GPBMessage

@property(nonatomic, readwrite) RIAIDADLottieActionModel_LottieControlType type;

/** render_key 都不等于0，才是内部的 */
@property(nonatomic, readwrite) int32_t viewKey;

@end

/**
 * Fetches the raw value of a @c RIAIDADLottieActionModel's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDADLottieActionModel_Type_RawValue(RIAIDADLottieActionModel *message);
/**
 * Sets the raw value of an @c RIAIDADLottieActionModel's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDADLottieActionModel_Type_RawValue(RIAIDADLottieActionModel *message, int32_t value);

#pragma mark - RIAIDADUrlActionModel

typedef GPB_ENUM(RIAIDADUrlActionModel_FieldNumber) {
  RIAIDADUrlActionModel_FieldNumber_URL = 1,
  RIAIDADUrlActionModel_FieldNumber_Bundle = 2,
};

/**
 * url的Action，如直接跳转落地的，这个行为透传给上层处理
 **/
@interface RIAIDADUrlActionModel : GPBMessage

/** 要跳转的url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 可能要透传的打包数据 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *bundle;
/** The number of items in @c bundle without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger bundle_Count;

@end

#pragma mark - RIAIDADConversionActionModel

typedef GPB_ENUM(RIAIDADConversionActionModel_FieldNumber) {
  RIAIDADConversionActionModel_FieldNumber_URL = 1,
  RIAIDADConversionActionModel_FieldNumber_DeepLink = 2,
  RIAIDADConversionActionModel_FieldNumber_Bundle = 3,
};

/**
 * 有转化的跳转url，这个行为透传给上层处理
 **/
@interface RIAIDADConversionActionModel : GPBMessage

/** 要跳转的url */
@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;

/** 要跳转的deep_link，可以是跳转应用 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deepLink;

/** 可能要透传的打包数据 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *bundle;
/** The number of items in @c bundle without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger bundle_Count;

@end

#pragma mark - RIAIDADConditionChangeActionModel

typedef GPB_ENUM(RIAIDADConditionChangeActionModel_FieldNumber) {
  RIAIDADConditionChangeActionModel_FieldNumber_Condition = 1,
};

/**
 * 条件变化Action
 **/
@interface RIAIDADConditionChangeActionModel : GPBMessage

/** 条件模型 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADConditionModel *condition;
/** Test to see if @c condition has been set. */
@property(nonatomic, readwrite) BOOL hasCondition;

@end

#pragma mark - RIAIDADVariableChangeActionModel

typedef GPB_ENUM(RIAIDADVariableChangeActionModel_FieldNumber) {
  RIAIDADVariableChangeActionModel_FieldNumber_Variable = 1,
};

/**
 * 变量变化的action
 **/
@interface RIAIDADVariableChangeActionModel : GPBMessage

/** 变量模型 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDBasicVariable *variable;
/** Test to see if @c variable has been set. */
@property(nonatomic, readwrite) BOOL hasVariable;

@end

#pragma mark - RIAIDADCancelTimerActionModel

typedef GPB_ENUM(RIAIDADCancelTimerActionModel_FieldNumber) {
  RIAIDADCancelTimerActionModel_FieldNumber_TriggerKey = 1,
};

/**
 * *
 * 作用: 取消一个正在进行中的时间控制器
 * 概念解释：
 * 1.时间触发器: RIAID 协议中定义的用于触发时间控制的概念。目前有两种，分别为:定时操作(ADTimeoutTriggerModel),心跳操作
 * (ADHeartBeatTriggerModel)。
 * 2.时间控制器: 引擎实现的时候，对于时间触发器的一个实例化，负责进行具体的时间控制行为。
 * 3.时间控制器与时间触发器，维持1:1的关系。在同一个时刻，一个时间触发器只能实例化一个时间控制器。
 * 具体功能描述: 通过trigger_key获得对应的时间触发器，取消该时间触发器对应的时间控制器。
 * 注意: 这里取消的是时间控制器，而非时间触发器。
 **/
@interface RIAIDADCancelTimerActionModel : GPBMessage

/** 一个ADTimeoutTriggerModel的key或者是一个ADHeartBeatTriggerModel的key */
@property(nonatomic, readwrite) int32_t triggerKey;

@end

#pragma mark - RIAIDADCustomActionModel

typedef GPB_ENUM(RIAIDADCustomActionModel_FieldNumber) {
  RIAIDADCustomActionModel_FieldNumber_Parameters = 1,
};

/**
 * 自定义的行为，用于透传的
 **/
@interface RIAIDADCustomActionModel : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *parameters;
/** The number of items in @c parameters without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger parameters_Count;

@end

#pragma mark - RIAIDADTriggerActionModel

typedef GPB_ENUM(RIAIDADTriggerActionModel_FieldNumber) {
  RIAIDADTriggerActionModel_FieldNumber_TriggerKeysArray = 1,
};

/**
 * 触发一个Trigger
 **/
@interface RIAIDADTriggerActionModel : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *triggerKeysArray;
/** The number of items in @c triggerKeysArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger triggerKeysArray_Count;

@end

#pragma mark - RIAIDADDynamicTrackActionModel

typedef GPB_ENUM(RIAIDADDynamicTrackActionModel_FieldNumber) {
  RIAIDADDynamicTrackActionModel_FieldNumber_Script = 1,
};

/**
 * 动态埋点 Action，由上层解析和发送，这个行为透传给上层处理
 **/
@interface RIAIDADDynamicTrackActionModel : GPBMessage

/** 动态下发埋点脚本,编写相应的脚本字符串 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *script;

@end

#pragma mark - RIAIDADRenderWrapModel

typedef GPB_ENUM(RIAIDADRenderWrapModel_FieldNumber) {
  RIAIDADRenderWrapModel_FieldNumber_RenderData = 1,
};

/**
 * 渲染对象的包裹
 **/
@interface RIAIDADRenderWrapModel : GPBMessage

/** 通过构建的Render对象，获取视图 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDNode *renderData;
/** Test to see if @c renderData has been set. */
@property(nonatomic, readwrite) BOOL hasRenderData;

@end

#pragma mark - RIAIDADSceneLifeCycleModel

typedef GPB_ENUM(RIAIDADSceneLifeCycleModel_FieldNumber) {
  RIAIDADSceneLifeCycleModel_FieldNumber_AppearTriggerKeysArray = 1,
  RIAIDADSceneLifeCycleModel_FieldNumber_DisappearTriggerKeysArray = 2,
};

/**
 * Scene生命周期模型
 **/
@interface RIAIDADSceneLifeCycleModel : GPBMessage

/** Scene展示时需要触发的TriggerKeys，hidden=false */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *appearTriggerKeysArray;
/** The number of items in @c appearTriggerKeysArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger appearTriggerKeysArray_Count;

/** Scene消失时需要触发的TriggerKeys，hidden=true */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *disappearTriggerKeysArray;
/** The number of items in @c disappearTriggerKeysArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger disappearTriggerKeysArray_Count;

@end

#pragma mark - RIAIDADBrowserLifeCycleModel

typedef GPB_ENUM(RIAIDADBrowserLifeCycleModel_FieldNumber) {
  RIAIDADBrowserLifeCycleModel_FieldNumber_AppearTriggerKeysArray = 1,
  RIAIDADBrowserLifeCycleModel_FieldNumber_DisappearTriggerKeysArray = 2,
  RIAIDADBrowserLifeCycleModel_FieldNumber_LoadTriggerKeysArray = 3,
  RIAIDADBrowserLifeCycleModel_FieldNumber_UnloadTriggerKeysArray = 4,
};

/**
 * ADBrowser生命周期模型
 **/
@interface RIAIDADBrowserLifeCycleModel : GPBMessage

/** RIAID所在的页面推入或从后台切换到前台。对齐Android的onResume和iOS的onDidAppear以及从后台切换到前台 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *appearTriggerKeysArray;
/** The number of items in @c appearTriggerKeysArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger appearTriggerKeysArray_Count;

/** RIAID所在的页面压栈或从前台切换到后台。对齐Android的onPause和iOS的onDidDisappear以及从前台切换到后台 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *disappearTriggerKeysArray;
/** The number of items in @c disappearTriggerKeysArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger disappearTriggerKeysArray_Count;

/** 加载广告，例如广告滑入时会调用。一般我们会在广告进入时，去触发广告场景开始展示。 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *loadTriggerKeysArray;
/** The number of items in @c loadTriggerKeysArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger loadTriggerKeysArray_Count;

/** 卸载广告，例如广告滑出时调用。 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *unloadTriggerKeysArray;
/** The number of items in @c unloadTriggerKeysArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger unloadTriggerKeysArray_Count;

@end

#pragma mark - RIAIDADSceneModel

typedef GPB_ENUM(RIAIDADSceneModel_FieldNumber) {
  RIAIDADSceneModel_FieldNumber_Key = 1,
  RIAIDADSceneModel_FieldNumber_Render = 2,
  RIAIDADSceneModel_FieldNumber_DebugInfo = 3,
  RIAIDADSceneModel_FieldNumber_LifeCycle = 4,
};

/**
 * 场景的model，用对场景的描述
 **/
@interface RIAIDADSceneModel : GPBMessage

@property(nonatomic, readwrite) int32_t key;

@property(nonatomic, readwrite, strong, null_resettable) RIAIDADRenderWrapModel *render;
/** Test to see if @c render has been set. */
@property(nonatomic, readwrite) BOOL hasRender;

/** 用来说明该场景是做什么用的，简单描述。 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *debugInfo;

/** 场景生命周期 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADSceneLifeCycleModel *lifeCycle;
/** Test to see if @c lifeCycle has been set. */
@property(nonatomic, readwrite) BOOL hasLifeCycle;

@end

#pragma mark - RIAIDADSceneRelationModel

typedef GPB_ENUM(RIAIDADSceneRelationModel_FieldNumber) {
  RIAIDADSceneRelationModel_FieldNumber_SourceKey = 1,
  RIAIDADSceneRelationModel_FieldNumber_TargetKey = 2,
  RIAIDADSceneRelationModel_FieldNumber_Distance = 3,
  RIAIDADSceneRelationModel_FieldNumber_SourceEdge = 4,
  RIAIDADSceneRelationModel_FieldNumber_TargetEdge = 5,
};

/**
 * 声明本场景与目标的关系
 * 具体用法：
 * 以target为基准，固定source的位置
 * source的sourceEdge在target的targetEdge
 * source的sourceEdge相对于target的targetEdge的距离为distance
 * 注意：
 * - sourceEdge与targetEdge必须成对存在，方向也成对存在，横向有start和end，纵向有top和bottom，如sourceEdge声明为横向，则targetEdge
 * 也必须为横向。
 * - ADSceneRelation通常是组合使用，source两个方向都应该有约束，若其中一个方向没有约束，则认为该方向相对于Canvas居中。
 * - 单一坐标轴上只需要描述一个边缘即可。
 * - 不能重复描述一个元素同一个边缘的约束关系。
 * - 同一个钢性元素，需要同时描述纵向和横向的边缘。
 * - 若target为canvas，仅支持同一个方向的约束，例：支持sourceEdge=start，targetEdge=start，不支持sourceEdge=start
 * ，targetEdge=end。
 **/
@interface RIAIDADSceneRelationModel : GPBMessage

/** 场景的key */
@property(nonatomic, readwrite) int32_t sourceKey;

/** 场景的key,特殊说明Canvas */
@property(nonatomic, readwrite) int32_t targetKey;

/** 设计稿的逻辑像素 */
@property(nonatomic, readwrite) float distance;

/** 本场景的边 */
@property(nonatomic, readwrite) RIAIDADSceneRelationModel_SceneEdge sourceEdge;

/** 目标场景的边 */
@property(nonatomic, readwrite) RIAIDADSceneRelationModel_SceneEdge targetEdge;

@end

/**
 * Fetches the raw value of a @c RIAIDADSceneRelationModel's @c sourceEdge property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDADSceneRelationModel_SourceEdge_RawValue(RIAIDADSceneRelationModel *message);
/**
 * Sets the raw value of an @c RIAIDADSceneRelationModel's @c sourceEdge property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDADSceneRelationModel_SourceEdge_RawValue(RIAIDADSceneRelationModel *message, int32_t value);

/**
 * Fetches the raw value of a @c RIAIDADSceneRelationModel's @c targetEdge property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDADSceneRelationModel_TargetEdge_RawValue(RIAIDADSceneRelationModel *message);
/**
 * Sets the raw value of an @c RIAIDADSceneRelationModel's @c targetEdge property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDADSceneRelationModel_TargetEdge_RawValue(RIAIDADSceneRelationModel *message, int32_t value);

#pragma mark - RIAIDADFunctionModel

typedef GPB_ENUM(RIAIDADFunctionModel_FieldNumber) {
  RIAIDADFunctionModel_FieldNumber_ReadAttribute = 1,
  RIAIDADFunctionModel_FieldNumber_AppInstalled = 2,
};

/**
 * 有返回值的内置函数
 * 只能有一个function
 **/
@interface RIAIDADFunctionModel : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) RIAIDADReadAttributeFunctionModel *readAttribute;
/** Test to see if @c readAttribute has been set. */
@property(nonatomic, readwrite) BOOL hasReadAttribute;

@property(nonatomic, readwrite, strong, null_resettable) RIAIDADAppInstalledFunctionModel *appInstalled;
/** Test to see if @c appInstalled has been set. */
@property(nonatomic, readwrite) BOOL hasAppInstalled;

@end

#pragma mark - RIAIDADReadAttributeFunctionModel

typedef GPB_ENUM(RIAIDADReadAttributeFunctionModel_FieldNumber) {
  RIAIDADReadAttributeFunctionModel_FieldNumber_Key = 1,
  RIAIDADReadAttributeFunctionModel_FieldNumber_ViewKey = 2,
  RIAIDADReadAttributeFunctionModel_FieldNumber_AttributeType = 3,
};

/**
 * 读取Node属性的内置函数，返回值类型默认是字符串
 * 目前仅用于埋点中存在${in_fun_key}时，需要调用这个内置函数，并将其返回值替换掉${in_fun_key}
 **/
@interface RIAIDADReadAttributeFunctionModel : GPBMessage

/** 内置函数的唯一地址 */
@property(nonatomic, readwrite) int32_t key;

/** Node的id */
@property(nonatomic, readwrite) int32_t viewKey;

/** 属性名 */
@property(nonatomic, readwrite) RIAIDAttributes_AttributeType attributeType;

@end

/**
 * Fetches the raw value of a @c RIAIDADReadAttributeFunctionModel's @c attributeType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RIAIDADReadAttributeFunctionModel_AttributeType_RawValue(RIAIDADReadAttributeFunctionModel *message);
/**
 * Sets the raw value of an @c RIAIDADReadAttributeFunctionModel's @c attributeType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRIAIDADReadAttributeFunctionModel_AttributeType_RawValue(RIAIDADReadAttributeFunctionModel *message, int32_t value);

#pragma mark - RIAIDADAppInstalledFunctionModel

typedef GPB_ENUM(RIAIDADAppInstalledFunctionModel_FieldNumber) {
  RIAIDADAppInstalledFunctionModel_FieldNumber_Key = 1,
  RIAIDADAppInstalledFunctionModel_FieldNumber_AppPkgNamesArray = 2,
  RIAIDADAppInstalledFunctionModel_FieldNumber_VariableKey = 3,
};

/**
 * 指定的app是否安装，返回值类型是bool类型
 **/
@interface RIAIDADAppInstalledFunctionModel : GPBMessage

/** 内置函数的唯一地址 */
@property(nonatomic, readwrite) int32_t key;

/** 要判断的app包名，满足数组中其中一个就认为是已安装 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *appPkgNamesArray;
/** The number of items in @c appPkgNamesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger appPkgNamesArray_Count;

/** 结果给到指定的变量，这个变量应该是个bool类型 */
@property(nonatomic, readwrite) int32_t variableKey;

@end

#pragma mark - RIAIDRiaidModel

typedef GPB_ENUM(RIAIDRiaidModel_FieldNumber) {
  RIAIDRiaidModel_FieldNumber_LifeCycle = 1,
  RIAIDRiaidModel_FieldNumber_ScenesArray = 2,
  RIAIDRiaidModel_FieldNumber_DefaultSceneRelationsArray = 3,
  RIAIDRiaidModel_FieldNumber_TriggersArray = 4,
  RIAIDRiaidModel_FieldNumber_DefaultConditionsArray = 5,
  RIAIDRiaidModel_FieldNumber_DefaultVariablesArray = 6,
  RIAIDRiaidModel_FieldNumber_FunctionsArray = 7,
  RIAIDRiaidModel_FieldNumber_ExportTriggerKeysArray = 8,
  RIAIDRiaidModel_FieldNumber_Key = 9,
};

/**
 * 广告dsl配置的数据模型，输入到ADDirector中
 **/
@interface RIAIDRiaidModel : GPBMessage

/** ADBrowser生命周期 */
@property(nonatomic, readwrite, strong, null_resettable) RIAIDADBrowserLifeCycleModel *lifeCycle;
/** Test to see if @c lifeCycle has been set. */
@property(nonatomic, readwrite) BOOL hasLifeCycle;

/** 所有的场景集合 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDADSceneModel*> *scenesArray;
/** The number of items in @c scenesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger scenesArray_Count;

/** scene的位置关系，用于定义scene在整个广告画布中的位置，用正则表达式解析。 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDADSceneRelationModel*> *defaultSceneRelationsArray;
/** The number of items in @c defaultSceneRelationsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger defaultSceneRelationsArray_Count;

/** 触发器集合，所有触发器提前在此下发，之后再使用，直接用TriggerKey调用。 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDADTriggerModel*> *triggersArray;
/** The number of items in @c triggersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger triggersArray_Count;

/** 起始默认的条件。作用类似环境变量，用作表述当前的状态。作为不确定操作的判断依据。 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDADConditionModel*> *defaultConditionsArray;
/** The number of items in @c defaultConditionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger defaultConditionsArray_Count;

/** 起始默认的变量，可被操作的所有的全局变量 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDBasicVariable*> *defaultVariablesArray;
/** The number of items in @c defaultVariablesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger defaultVariablesArray_Count;

/** 内置函数集合，所有函数提前在此下发，之后使用，可通过${functionKey}调用 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RIAIDADFunctionModel*> *functionsArray;
/** The number of items in @c functionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger functionsArray_Count;

/** 对外暴露的触发器，外部可直接调用，如接口请求成功后需要显示某个场景 */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *exportTriggerKeysArray;
/** The number of items in @c exportTriggerKeysArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger exportTriggerKeysArray_Count;

/** 模板的key，也就是模板的名字，不应该重复 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

@end

#pragma mark - RIAIDSystemKeyEnum

@interface RIAIDSystemKeyEnum : GPBMessage

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
